
__LCD_Driver_8bit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000022e2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  000022e2  00002356  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001668  00000000  00000000  00002364  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000093d  00000000  00000000  000039cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00004309  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00004449  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000045b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00006202  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  000070ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00007e9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00007ffc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00008289  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00008a57  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 ee       	ldi	r30, 0xE2	; 226
      68:	f2 e2       	ldi	r31, 0x22	; 34
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 36       	cpi	r26, 0x6E	; 110
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 ec 0f 	call	0x1fd8	; 0x1fd8 <main>
      7a:	0c 94 6f 11 	jmp	0x22de	; 0x22de <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 38 11 	jmp	0x2270	; 0x2270 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a5 e6       	ldi	r26, 0x65	; 101
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 54 11 	jmp	0x22a8	; 0x22a8 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 44 11 	jmp	0x2288	; 0x2288 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 60 11 	jmp	0x22c0	; 0x22c0 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 44 11 	jmp	0x2288	; 0x2288 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 60 11 	jmp	0x22c0	; 0x22c0 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 38 11 	jmp	0x2270	; 0x2270 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	85 e6       	ldi	r24, 0x65	; 101
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 54 11 	jmp	0x22a8	; 0x22a8 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 44 11 	jmp	0x2288	; 0x2288 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 60 11 	jmp	0x22c0	; 0x22c0 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 44 11 	jmp	0x2288	; 0x2288 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 60 11 	jmp	0x22c0	; 0x22c0 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 44 11 	jmp	0x2288	; 0x2288 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 60 11 	jmp	0x22c0	; 0x22c0 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 48 11 	jmp	0x2290	; 0x2290 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 64 11 	jmp	0x22c8	; 0x22c8 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <Dio_vidSetPinDir>:
#include "../Lib/Bit_math.h"
#include "Dio_int.h"
#include "Dio_priv.h"

void Dio_vidSetPinDir(u8 Pin , u8 Dir)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	66 97       	sbiw	r28, 0x16	; 22
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	8b 83       	std	Y+3, r24	; 0x03
     b4c:	6c 83       	std	Y+4, r22	; 0x04
	u8 PortId;
	u8 PinLoc;

	PortId = Pin/8;
     b4e:	8b 81       	ldd	r24, Y+3	; 0x03
     b50:	86 95       	lsr	r24
     b52:	86 95       	lsr	r24
     b54:	86 95       	lsr	r24
     b56:	8a 83       	std	Y+2, r24	; 0x02
	PinLoc = Pin%8;
     b58:	8b 81       	ldd	r24, Y+3	; 0x03
     b5a:	87 70       	andi	r24, 0x07	; 7
     b5c:	89 83       	std	Y+1, r24	; 0x01

	switch(PortId){
     b5e:	8a 81       	ldd	r24, Y+2	; 0x02
     b60:	28 2f       	mov	r18, r24
     b62:	30 e0       	ldi	r19, 0x00	; 0
     b64:	3e 8b       	std	Y+22, r19	; 0x16
     b66:	2d 8b       	std	Y+21, r18	; 0x15
     b68:	8d 89       	ldd	r24, Y+21	; 0x15
     b6a:	9e 89       	ldd	r25, Y+22	; 0x16
     b6c:	81 30       	cpi	r24, 0x01	; 1
     b6e:	91 05       	cpc	r25, r1
     b70:	09 f4       	brne	.+2      	; 0xb74 <Dio_vidSetPinDir+0x3e>
     b72:	e1 c0       	rjmp	.+450    	; 0xd36 <Dio_vidSetPinDir+0x200>
     b74:	2d 89       	ldd	r18, Y+21	; 0x15
     b76:	3e 89       	ldd	r19, Y+22	; 0x16
     b78:	22 30       	cpi	r18, 0x02	; 2
     b7a:	31 05       	cpc	r19, r1
     b7c:	2c f4       	brge	.+10     	; 0xb88 <Dio_vidSetPinDir+0x52>
     b7e:	8d 89       	ldd	r24, Y+21	; 0x15
     b80:	9e 89       	ldd	r25, Y+22	; 0x16
     b82:	00 97       	sbiw	r24, 0x00	; 0
     b84:	71 f0       	breq	.+28     	; 0xba2 <Dio_vidSetPinDir+0x6c>
     b86:	34 c3       	rjmp	.+1640   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
     b88:	2d 89       	ldd	r18, Y+21	; 0x15
     b8a:	3e 89       	ldd	r19, Y+22	; 0x16
     b8c:	22 30       	cpi	r18, 0x02	; 2
     b8e:	31 05       	cpc	r19, r1
     b90:	09 f4       	brne	.+2      	; 0xb94 <Dio_vidSetPinDir+0x5e>
     b92:	9b c1       	rjmp	.+822    	; 0xeca <Dio_vidSetPinDir+0x394>
     b94:	8d 89       	ldd	r24, Y+21	; 0x15
     b96:	9e 89       	ldd	r25, Y+22	; 0x16
     b98:	83 30       	cpi	r24, 0x03	; 3
     b9a:	91 05       	cpc	r25, r1
     b9c:	09 f4       	brne	.+2      	; 0xba0 <Dio_vidSetPinDir+0x6a>
     b9e:	5f c2       	rjmp	.+1214   	; 0x105e <Dio_vidSetPinDir+0x528>
     ba0:	27 c3       	rjmp	.+1614   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
		case 0:
			if(Dir ==1)
     ba2:	8c 81       	ldd	r24, Y+4	; 0x04
     ba4:	81 30       	cpi	r24, 0x01	; 1
     ba6:	09 f0       	breq	.+2      	; 0xbaa <Dio_vidSetPinDir+0x74>
     ba8:	63 c0       	rjmp	.+198    	; 0xc70 <Dio_vidSetPinDir+0x13a>
				{
					switch(PinLoc)
     baa:	89 81       	ldd	r24, Y+1	; 0x01
     bac:	28 2f       	mov	r18, r24
     bae:	30 e0       	ldi	r19, 0x00	; 0
     bb0:	3c 8b       	std	Y+20, r19	; 0x14
     bb2:	2b 8b       	std	Y+19, r18	; 0x13
     bb4:	8b 89       	ldd	r24, Y+19	; 0x13
     bb6:	9c 89       	ldd	r25, Y+20	; 0x14
     bb8:	83 30       	cpi	r24, 0x03	; 3
     bba:	91 05       	cpc	r25, r1
     bbc:	d9 f1       	breq	.+118    	; 0xc34 <Dio_vidSetPinDir+0xfe>
     bbe:	2b 89       	ldd	r18, Y+19	; 0x13
     bc0:	3c 89       	ldd	r19, Y+20	; 0x14
     bc2:	24 30       	cpi	r18, 0x04	; 4
     bc4:	31 05       	cpc	r19, r1
     bc6:	7c f4       	brge	.+30     	; 0xbe6 <Dio_vidSetPinDir+0xb0>
     bc8:	8b 89       	ldd	r24, Y+19	; 0x13
     bca:	9c 89       	ldd	r25, Y+20	; 0x14
     bcc:	81 30       	cpi	r24, 0x01	; 1
     bce:	91 05       	cpc	r25, r1
     bd0:	29 f1       	breq	.+74     	; 0xc1c <Dio_vidSetPinDir+0xe6>
     bd2:	2b 89       	ldd	r18, Y+19	; 0x13
     bd4:	3c 89       	ldd	r19, Y+20	; 0x14
     bd6:	22 30       	cpi	r18, 0x02	; 2
     bd8:	31 05       	cpc	r19, r1
     bda:	34 f5       	brge	.+76     	; 0xc28 <Dio_vidSetPinDir+0xf2>
     bdc:	8b 89       	ldd	r24, Y+19	; 0x13
     bde:	9c 89       	ldd	r25, Y+20	; 0x14
     be0:	00 97       	sbiw	r24, 0x00	; 0
     be2:	b1 f0       	breq	.+44     	; 0xc10 <Dio_vidSetPinDir+0xda>
     be4:	05 c3       	rjmp	.+1546   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
     be6:	2b 89       	ldd	r18, Y+19	; 0x13
     be8:	3c 89       	ldd	r19, Y+20	; 0x14
     bea:	25 30       	cpi	r18, 0x05	; 5
     bec:	31 05       	cpc	r19, r1
     bee:	71 f1       	breq	.+92     	; 0xc4c <Dio_vidSetPinDir+0x116>
     bf0:	8b 89       	ldd	r24, Y+19	; 0x13
     bf2:	9c 89       	ldd	r25, Y+20	; 0x14
     bf4:	85 30       	cpi	r24, 0x05	; 5
     bf6:	91 05       	cpc	r25, r1
     bf8:	1c f1       	brlt	.+70     	; 0xc40 <Dio_vidSetPinDir+0x10a>
     bfa:	2b 89       	ldd	r18, Y+19	; 0x13
     bfc:	3c 89       	ldd	r19, Y+20	; 0x14
     bfe:	26 30       	cpi	r18, 0x06	; 6
     c00:	31 05       	cpc	r19, r1
     c02:	51 f1       	breq	.+84     	; 0xc58 <Dio_vidSetPinDir+0x122>
     c04:	8b 89       	ldd	r24, Y+19	; 0x13
     c06:	9c 89       	ldd	r25, Y+20	; 0x14
     c08:	87 30       	cpi	r24, 0x07	; 7
     c0a:	91 05       	cpc	r25, r1
     c0c:	59 f1       	breq	.+86     	; 0xc64 <Dio_vidSetPinDir+0x12e>
     c0e:	f0 c2       	rjmp	.+1504   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					{
						case 0:
							DDRA.Bits.Pin0 =1;
     c10:	ea e3       	ldi	r30, 0x3A	; 58
     c12:	f0 e0       	ldi	r31, 0x00	; 0
     c14:	80 81       	ld	r24, Z
     c16:	81 60       	ori	r24, 0x01	; 1
     c18:	80 83       	st	Z, r24
     c1a:	ea c2       	rjmp	.+1492   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 1:
							DDRA.Bits.Pin1 =1;
     c1c:	ea e3       	ldi	r30, 0x3A	; 58
     c1e:	f0 e0       	ldi	r31, 0x00	; 0
     c20:	80 81       	ld	r24, Z
     c22:	82 60       	ori	r24, 0x02	; 2
     c24:	80 83       	st	Z, r24
     c26:	e4 c2       	rjmp	.+1480   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 2:
							DDRA.Bits.Pin2 =1;
     c28:	ea e3       	ldi	r30, 0x3A	; 58
     c2a:	f0 e0       	ldi	r31, 0x00	; 0
     c2c:	80 81       	ld	r24, Z
     c2e:	84 60       	ori	r24, 0x04	; 4
     c30:	80 83       	st	Z, r24
     c32:	de c2       	rjmp	.+1468   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 3:
							DDRA.Bits.Pin3 =1;
     c34:	ea e3       	ldi	r30, 0x3A	; 58
     c36:	f0 e0       	ldi	r31, 0x00	; 0
     c38:	80 81       	ld	r24, Z
     c3a:	88 60       	ori	r24, 0x08	; 8
     c3c:	80 83       	st	Z, r24
     c3e:	d8 c2       	rjmp	.+1456   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 4:
							DDRA.Bits.Pin4 =1;
     c40:	ea e3       	ldi	r30, 0x3A	; 58
     c42:	f0 e0       	ldi	r31, 0x00	; 0
     c44:	80 81       	ld	r24, Z
     c46:	80 61       	ori	r24, 0x10	; 16
     c48:	80 83       	st	Z, r24
     c4a:	d2 c2       	rjmp	.+1444   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 5:
							DDRA.Bits.Pin5 =1;
     c4c:	ea e3       	ldi	r30, 0x3A	; 58
     c4e:	f0 e0       	ldi	r31, 0x00	; 0
     c50:	80 81       	ld	r24, Z
     c52:	80 62       	ori	r24, 0x20	; 32
     c54:	80 83       	st	Z, r24
     c56:	cc c2       	rjmp	.+1432   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 6:
							DDRA.Bits.Pin6 =1;
     c58:	ea e3       	ldi	r30, 0x3A	; 58
     c5a:	f0 e0       	ldi	r31, 0x00	; 0
     c5c:	80 81       	ld	r24, Z
     c5e:	80 64       	ori	r24, 0x40	; 64
     c60:	80 83       	st	Z, r24
     c62:	c6 c2       	rjmp	.+1420   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 7:
							DDRA.Bits.Pin7 =1;
     c64:	ea e3       	ldi	r30, 0x3A	; 58
     c66:	f0 e0       	ldi	r31, 0x00	; 0
     c68:	80 81       	ld	r24, Z
     c6a:	80 68       	ori	r24, 0x80	; 128
     c6c:	80 83       	st	Z, r24
     c6e:	c0 c2       	rjmp	.+1408   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;
					}
				}
			else
			{
				switch(PinLoc)
     c70:	89 81       	ldd	r24, Y+1	; 0x01
     c72:	28 2f       	mov	r18, r24
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	3a 8b       	std	Y+18, r19	; 0x12
     c78:	29 8b       	std	Y+17, r18	; 0x11
     c7a:	89 89       	ldd	r24, Y+17	; 0x11
     c7c:	9a 89       	ldd	r25, Y+18	; 0x12
     c7e:	83 30       	cpi	r24, 0x03	; 3
     c80:	91 05       	cpc	r25, r1
     c82:	d9 f1       	breq	.+118    	; 0xcfa <Dio_vidSetPinDir+0x1c4>
     c84:	29 89       	ldd	r18, Y+17	; 0x11
     c86:	3a 89       	ldd	r19, Y+18	; 0x12
     c88:	24 30       	cpi	r18, 0x04	; 4
     c8a:	31 05       	cpc	r19, r1
     c8c:	7c f4       	brge	.+30     	; 0xcac <Dio_vidSetPinDir+0x176>
     c8e:	89 89       	ldd	r24, Y+17	; 0x11
     c90:	9a 89       	ldd	r25, Y+18	; 0x12
     c92:	81 30       	cpi	r24, 0x01	; 1
     c94:	91 05       	cpc	r25, r1
     c96:	29 f1       	breq	.+74     	; 0xce2 <Dio_vidSetPinDir+0x1ac>
     c98:	29 89       	ldd	r18, Y+17	; 0x11
     c9a:	3a 89       	ldd	r19, Y+18	; 0x12
     c9c:	22 30       	cpi	r18, 0x02	; 2
     c9e:	31 05       	cpc	r19, r1
     ca0:	34 f5       	brge	.+76     	; 0xcee <Dio_vidSetPinDir+0x1b8>
     ca2:	89 89       	ldd	r24, Y+17	; 0x11
     ca4:	9a 89       	ldd	r25, Y+18	; 0x12
     ca6:	00 97       	sbiw	r24, 0x00	; 0
     ca8:	b1 f0       	breq	.+44     	; 0xcd6 <Dio_vidSetPinDir+0x1a0>
     caa:	a2 c2       	rjmp	.+1348   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
     cac:	29 89       	ldd	r18, Y+17	; 0x11
     cae:	3a 89       	ldd	r19, Y+18	; 0x12
     cb0:	25 30       	cpi	r18, 0x05	; 5
     cb2:	31 05       	cpc	r19, r1
     cb4:	71 f1       	breq	.+92     	; 0xd12 <Dio_vidSetPinDir+0x1dc>
     cb6:	89 89       	ldd	r24, Y+17	; 0x11
     cb8:	9a 89       	ldd	r25, Y+18	; 0x12
     cba:	85 30       	cpi	r24, 0x05	; 5
     cbc:	91 05       	cpc	r25, r1
     cbe:	1c f1       	brlt	.+70     	; 0xd06 <Dio_vidSetPinDir+0x1d0>
     cc0:	29 89       	ldd	r18, Y+17	; 0x11
     cc2:	3a 89       	ldd	r19, Y+18	; 0x12
     cc4:	26 30       	cpi	r18, 0x06	; 6
     cc6:	31 05       	cpc	r19, r1
     cc8:	51 f1       	breq	.+84     	; 0xd1e <Dio_vidSetPinDir+0x1e8>
     cca:	89 89       	ldd	r24, Y+17	; 0x11
     ccc:	9a 89       	ldd	r25, Y+18	; 0x12
     cce:	87 30       	cpi	r24, 0x07	; 7
     cd0:	91 05       	cpc	r25, r1
     cd2:	59 f1       	breq	.+86     	; 0xd2a <Dio_vidSetPinDir+0x1f4>
     cd4:	8d c2       	rjmp	.+1306   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
				{
					case 0:
						DDRA.Bits.Pin0 =0;
     cd6:	ea e3       	ldi	r30, 0x3A	; 58
     cd8:	f0 e0       	ldi	r31, 0x00	; 0
     cda:	80 81       	ld	r24, Z
     cdc:	8e 7f       	andi	r24, 0xFE	; 254
     cde:	80 83       	st	Z, r24
     ce0:	87 c2       	rjmp	.+1294   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 1:
						DDRA.Bits.Pin1 =0;
     ce2:	ea e3       	ldi	r30, 0x3A	; 58
     ce4:	f0 e0       	ldi	r31, 0x00	; 0
     ce6:	80 81       	ld	r24, Z
     ce8:	8d 7f       	andi	r24, 0xFD	; 253
     cea:	80 83       	st	Z, r24
     cec:	81 c2       	rjmp	.+1282   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 2:
						DDRA.Bits.Pin2 =0;
     cee:	ea e3       	ldi	r30, 0x3A	; 58
     cf0:	f0 e0       	ldi	r31, 0x00	; 0
     cf2:	80 81       	ld	r24, Z
     cf4:	8b 7f       	andi	r24, 0xFB	; 251
     cf6:	80 83       	st	Z, r24
     cf8:	7b c2       	rjmp	.+1270   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 3:
						DDRA.Bits.Pin3 =0;
     cfa:	ea e3       	ldi	r30, 0x3A	; 58
     cfc:	f0 e0       	ldi	r31, 0x00	; 0
     cfe:	80 81       	ld	r24, Z
     d00:	87 7f       	andi	r24, 0xF7	; 247
     d02:	80 83       	st	Z, r24
     d04:	75 c2       	rjmp	.+1258   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 4:
						DDRA.Bits.Pin4 =0;
     d06:	ea e3       	ldi	r30, 0x3A	; 58
     d08:	f0 e0       	ldi	r31, 0x00	; 0
     d0a:	80 81       	ld	r24, Z
     d0c:	8f 7e       	andi	r24, 0xEF	; 239
     d0e:	80 83       	st	Z, r24
     d10:	6f c2       	rjmp	.+1246   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 5:
						DDRA.Bits.Pin5 =0;
     d12:	ea e3       	ldi	r30, 0x3A	; 58
     d14:	f0 e0       	ldi	r31, 0x00	; 0
     d16:	80 81       	ld	r24, Z
     d18:	8f 7d       	andi	r24, 0xDF	; 223
     d1a:	80 83       	st	Z, r24
     d1c:	69 c2       	rjmp	.+1234   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 6:
						DDRA.Bits.Pin6 =0;
     d1e:	ea e3       	ldi	r30, 0x3A	; 58
     d20:	f0 e0       	ldi	r31, 0x00	; 0
     d22:	80 81       	ld	r24, Z
     d24:	8f 7b       	andi	r24, 0xBF	; 191
     d26:	80 83       	st	Z, r24
     d28:	63 c2       	rjmp	.+1222   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 7:
						DDRA.Bits.Pin7 =0;
     d2a:	ea e3       	ldi	r30, 0x3A	; 58
     d2c:	f0 e0       	ldi	r31, 0x00	; 0
     d2e:	80 81       	ld	r24, Z
     d30:	8f 77       	andi	r24, 0x7F	; 127
     d32:	80 83       	st	Z, r24
     d34:	5d c2       	rjmp	.+1210   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
				}
			}
		break;

		case 1:
			if(Dir ==1)
     d36:	8c 81       	ldd	r24, Y+4	; 0x04
     d38:	81 30       	cpi	r24, 0x01	; 1
     d3a:	09 f0       	breq	.+2      	; 0xd3e <Dio_vidSetPinDir+0x208>
     d3c:	63 c0       	rjmp	.+198    	; 0xe04 <Dio_vidSetPinDir+0x2ce>
				{
					switch(PinLoc)
     d3e:	89 81       	ldd	r24, Y+1	; 0x01
     d40:	28 2f       	mov	r18, r24
     d42:	30 e0       	ldi	r19, 0x00	; 0
     d44:	38 8b       	std	Y+16, r19	; 0x10
     d46:	2f 87       	std	Y+15, r18	; 0x0f
     d48:	8f 85       	ldd	r24, Y+15	; 0x0f
     d4a:	98 89       	ldd	r25, Y+16	; 0x10
     d4c:	83 30       	cpi	r24, 0x03	; 3
     d4e:	91 05       	cpc	r25, r1
     d50:	d9 f1       	breq	.+118    	; 0xdc8 <Dio_vidSetPinDir+0x292>
     d52:	2f 85       	ldd	r18, Y+15	; 0x0f
     d54:	38 89       	ldd	r19, Y+16	; 0x10
     d56:	24 30       	cpi	r18, 0x04	; 4
     d58:	31 05       	cpc	r19, r1
     d5a:	7c f4       	brge	.+30     	; 0xd7a <Dio_vidSetPinDir+0x244>
     d5c:	8f 85       	ldd	r24, Y+15	; 0x0f
     d5e:	98 89       	ldd	r25, Y+16	; 0x10
     d60:	81 30       	cpi	r24, 0x01	; 1
     d62:	91 05       	cpc	r25, r1
     d64:	29 f1       	breq	.+74     	; 0xdb0 <Dio_vidSetPinDir+0x27a>
     d66:	2f 85       	ldd	r18, Y+15	; 0x0f
     d68:	38 89       	ldd	r19, Y+16	; 0x10
     d6a:	22 30       	cpi	r18, 0x02	; 2
     d6c:	31 05       	cpc	r19, r1
     d6e:	34 f5       	brge	.+76     	; 0xdbc <Dio_vidSetPinDir+0x286>
     d70:	8f 85       	ldd	r24, Y+15	; 0x0f
     d72:	98 89       	ldd	r25, Y+16	; 0x10
     d74:	00 97       	sbiw	r24, 0x00	; 0
     d76:	b1 f0       	breq	.+44     	; 0xda4 <Dio_vidSetPinDir+0x26e>
     d78:	3b c2       	rjmp	.+1142   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
     d7a:	2f 85       	ldd	r18, Y+15	; 0x0f
     d7c:	38 89       	ldd	r19, Y+16	; 0x10
     d7e:	25 30       	cpi	r18, 0x05	; 5
     d80:	31 05       	cpc	r19, r1
     d82:	71 f1       	breq	.+92     	; 0xde0 <Dio_vidSetPinDir+0x2aa>
     d84:	8f 85       	ldd	r24, Y+15	; 0x0f
     d86:	98 89       	ldd	r25, Y+16	; 0x10
     d88:	85 30       	cpi	r24, 0x05	; 5
     d8a:	91 05       	cpc	r25, r1
     d8c:	1c f1       	brlt	.+70     	; 0xdd4 <Dio_vidSetPinDir+0x29e>
     d8e:	2f 85       	ldd	r18, Y+15	; 0x0f
     d90:	38 89       	ldd	r19, Y+16	; 0x10
     d92:	26 30       	cpi	r18, 0x06	; 6
     d94:	31 05       	cpc	r19, r1
     d96:	51 f1       	breq	.+84     	; 0xdec <Dio_vidSetPinDir+0x2b6>
     d98:	8f 85       	ldd	r24, Y+15	; 0x0f
     d9a:	98 89       	ldd	r25, Y+16	; 0x10
     d9c:	87 30       	cpi	r24, 0x07	; 7
     d9e:	91 05       	cpc	r25, r1
     da0:	59 f1       	breq	.+86     	; 0xdf8 <Dio_vidSetPinDir+0x2c2>
     da2:	26 c2       	rjmp	.+1100   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					{
						case 0:
							DDRB.Bits.Pin0 =1;
     da4:	e7 e3       	ldi	r30, 0x37	; 55
     da6:	f0 e0       	ldi	r31, 0x00	; 0
     da8:	80 81       	ld	r24, Z
     daa:	81 60       	ori	r24, 0x01	; 1
     dac:	80 83       	st	Z, r24
     dae:	20 c2       	rjmp	.+1088   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 1:
							DDRB.Bits.Pin1 =1;
     db0:	e7 e3       	ldi	r30, 0x37	; 55
     db2:	f0 e0       	ldi	r31, 0x00	; 0
     db4:	80 81       	ld	r24, Z
     db6:	82 60       	ori	r24, 0x02	; 2
     db8:	80 83       	st	Z, r24
     dba:	1a c2       	rjmp	.+1076   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 2:
							DDRB.Bits.Pin2 =1;
     dbc:	e7 e3       	ldi	r30, 0x37	; 55
     dbe:	f0 e0       	ldi	r31, 0x00	; 0
     dc0:	80 81       	ld	r24, Z
     dc2:	84 60       	ori	r24, 0x04	; 4
     dc4:	80 83       	st	Z, r24
     dc6:	14 c2       	rjmp	.+1064   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 3:
							DDRB.Bits.Pin3 =1;
     dc8:	e7 e3       	ldi	r30, 0x37	; 55
     dca:	f0 e0       	ldi	r31, 0x00	; 0
     dcc:	80 81       	ld	r24, Z
     dce:	88 60       	ori	r24, 0x08	; 8
     dd0:	80 83       	st	Z, r24
     dd2:	0e c2       	rjmp	.+1052   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 4:
							DDRB.Bits.Pin4 =1;
     dd4:	e7 e3       	ldi	r30, 0x37	; 55
     dd6:	f0 e0       	ldi	r31, 0x00	; 0
     dd8:	80 81       	ld	r24, Z
     dda:	80 61       	ori	r24, 0x10	; 16
     ddc:	80 83       	st	Z, r24
     dde:	08 c2       	rjmp	.+1040   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 5:
							DDRB.Bits.Pin5 =1;
     de0:	e7 e3       	ldi	r30, 0x37	; 55
     de2:	f0 e0       	ldi	r31, 0x00	; 0
     de4:	80 81       	ld	r24, Z
     de6:	80 62       	ori	r24, 0x20	; 32
     de8:	80 83       	st	Z, r24
     dea:	02 c2       	rjmp	.+1028   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 6:
							DDRB.Bits.Pin6 =1;
     dec:	e7 e3       	ldi	r30, 0x37	; 55
     dee:	f0 e0       	ldi	r31, 0x00	; 0
     df0:	80 81       	ld	r24, Z
     df2:	80 64       	ori	r24, 0x40	; 64
     df4:	80 83       	st	Z, r24
     df6:	fc c1       	rjmp	.+1016   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 7:
							DDRB.Bits.Pin7 =1;
     df8:	e7 e3       	ldi	r30, 0x37	; 55
     dfa:	f0 e0       	ldi	r31, 0x00	; 0
     dfc:	80 81       	ld	r24, Z
     dfe:	80 68       	ori	r24, 0x80	; 128
     e00:	80 83       	st	Z, r24
     e02:	f6 c1       	rjmp	.+1004   	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;
					}
				}
			else
			{
				switch(PinLoc)
     e04:	89 81       	ldd	r24, Y+1	; 0x01
     e06:	28 2f       	mov	r18, r24
     e08:	30 e0       	ldi	r19, 0x00	; 0
     e0a:	3e 87       	std	Y+14, r19	; 0x0e
     e0c:	2d 87       	std	Y+13, r18	; 0x0d
     e0e:	8d 85       	ldd	r24, Y+13	; 0x0d
     e10:	9e 85       	ldd	r25, Y+14	; 0x0e
     e12:	83 30       	cpi	r24, 0x03	; 3
     e14:	91 05       	cpc	r25, r1
     e16:	d9 f1       	breq	.+118    	; 0xe8e <Dio_vidSetPinDir+0x358>
     e18:	2d 85       	ldd	r18, Y+13	; 0x0d
     e1a:	3e 85       	ldd	r19, Y+14	; 0x0e
     e1c:	24 30       	cpi	r18, 0x04	; 4
     e1e:	31 05       	cpc	r19, r1
     e20:	7c f4       	brge	.+30     	; 0xe40 <Dio_vidSetPinDir+0x30a>
     e22:	8d 85       	ldd	r24, Y+13	; 0x0d
     e24:	9e 85       	ldd	r25, Y+14	; 0x0e
     e26:	81 30       	cpi	r24, 0x01	; 1
     e28:	91 05       	cpc	r25, r1
     e2a:	29 f1       	breq	.+74     	; 0xe76 <Dio_vidSetPinDir+0x340>
     e2c:	2d 85       	ldd	r18, Y+13	; 0x0d
     e2e:	3e 85       	ldd	r19, Y+14	; 0x0e
     e30:	22 30       	cpi	r18, 0x02	; 2
     e32:	31 05       	cpc	r19, r1
     e34:	34 f5       	brge	.+76     	; 0xe82 <Dio_vidSetPinDir+0x34c>
     e36:	8d 85       	ldd	r24, Y+13	; 0x0d
     e38:	9e 85       	ldd	r25, Y+14	; 0x0e
     e3a:	00 97       	sbiw	r24, 0x00	; 0
     e3c:	b1 f0       	breq	.+44     	; 0xe6a <Dio_vidSetPinDir+0x334>
     e3e:	d8 c1       	rjmp	.+944    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
     e40:	2d 85       	ldd	r18, Y+13	; 0x0d
     e42:	3e 85       	ldd	r19, Y+14	; 0x0e
     e44:	25 30       	cpi	r18, 0x05	; 5
     e46:	31 05       	cpc	r19, r1
     e48:	71 f1       	breq	.+92     	; 0xea6 <Dio_vidSetPinDir+0x370>
     e4a:	8d 85       	ldd	r24, Y+13	; 0x0d
     e4c:	9e 85       	ldd	r25, Y+14	; 0x0e
     e4e:	85 30       	cpi	r24, 0x05	; 5
     e50:	91 05       	cpc	r25, r1
     e52:	1c f1       	brlt	.+70     	; 0xe9a <Dio_vidSetPinDir+0x364>
     e54:	2d 85       	ldd	r18, Y+13	; 0x0d
     e56:	3e 85       	ldd	r19, Y+14	; 0x0e
     e58:	26 30       	cpi	r18, 0x06	; 6
     e5a:	31 05       	cpc	r19, r1
     e5c:	51 f1       	breq	.+84     	; 0xeb2 <Dio_vidSetPinDir+0x37c>
     e5e:	8d 85       	ldd	r24, Y+13	; 0x0d
     e60:	9e 85       	ldd	r25, Y+14	; 0x0e
     e62:	87 30       	cpi	r24, 0x07	; 7
     e64:	91 05       	cpc	r25, r1
     e66:	59 f1       	breq	.+86     	; 0xebe <Dio_vidSetPinDir+0x388>
     e68:	c3 c1       	rjmp	.+902    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
				{
					case 0:
						DDRB.Bits.Pin0 =0;
     e6a:	e7 e3       	ldi	r30, 0x37	; 55
     e6c:	f0 e0       	ldi	r31, 0x00	; 0
     e6e:	80 81       	ld	r24, Z
     e70:	8e 7f       	andi	r24, 0xFE	; 254
     e72:	80 83       	st	Z, r24
     e74:	bd c1       	rjmp	.+890    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 1:
						DDRB.Bits.Pin1 =0;
     e76:	e7 e3       	ldi	r30, 0x37	; 55
     e78:	f0 e0       	ldi	r31, 0x00	; 0
     e7a:	80 81       	ld	r24, Z
     e7c:	8d 7f       	andi	r24, 0xFD	; 253
     e7e:	80 83       	st	Z, r24
     e80:	b7 c1       	rjmp	.+878    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 2:
						DDRB.Bits.Pin2 =0;
     e82:	e7 e3       	ldi	r30, 0x37	; 55
     e84:	f0 e0       	ldi	r31, 0x00	; 0
     e86:	80 81       	ld	r24, Z
     e88:	8b 7f       	andi	r24, 0xFB	; 251
     e8a:	80 83       	st	Z, r24
     e8c:	b1 c1       	rjmp	.+866    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 3:
						DDRB.Bits.Pin3 =0;
     e8e:	e7 e3       	ldi	r30, 0x37	; 55
     e90:	f0 e0       	ldi	r31, 0x00	; 0
     e92:	80 81       	ld	r24, Z
     e94:	87 7f       	andi	r24, 0xF7	; 247
     e96:	80 83       	st	Z, r24
     e98:	ab c1       	rjmp	.+854    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 4:
						DDRB.Bits.Pin4 =0;
     e9a:	e7 e3       	ldi	r30, 0x37	; 55
     e9c:	f0 e0       	ldi	r31, 0x00	; 0
     e9e:	80 81       	ld	r24, Z
     ea0:	8f 7e       	andi	r24, 0xEF	; 239
     ea2:	80 83       	st	Z, r24
     ea4:	a5 c1       	rjmp	.+842    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 5:
						DDRB.Bits.Pin5 =0;
     ea6:	e7 e3       	ldi	r30, 0x37	; 55
     ea8:	f0 e0       	ldi	r31, 0x00	; 0
     eaa:	80 81       	ld	r24, Z
     eac:	8f 7d       	andi	r24, 0xDF	; 223
     eae:	80 83       	st	Z, r24
     eb0:	9f c1       	rjmp	.+830    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 6:
						DDRB.Bits.Pin6 =0;
     eb2:	e7 e3       	ldi	r30, 0x37	; 55
     eb4:	f0 e0       	ldi	r31, 0x00	; 0
     eb6:	80 81       	ld	r24, Z
     eb8:	8f 7b       	andi	r24, 0xBF	; 191
     eba:	80 83       	st	Z, r24
     ebc:	99 c1       	rjmp	.+818    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 7:
						DDRB.Bits.Pin7 =0;
     ebe:	e7 e3       	ldi	r30, 0x37	; 55
     ec0:	f0 e0       	ldi	r31, 0x00	; 0
     ec2:	80 81       	ld	r24, Z
     ec4:	8f 77       	andi	r24, 0x7F	; 127
     ec6:	80 83       	st	Z, r24
     ec8:	93 c1       	rjmp	.+806    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
				}
			}
			break;

		case 2:
			if(Dir ==1)
     eca:	8c 81       	ldd	r24, Y+4	; 0x04
     ecc:	81 30       	cpi	r24, 0x01	; 1
     ece:	09 f0       	breq	.+2      	; 0xed2 <Dio_vidSetPinDir+0x39c>
     ed0:	63 c0       	rjmp	.+198    	; 0xf98 <Dio_vidSetPinDir+0x462>
				{
					switch(PinLoc)
     ed2:	89 81       	ldd	r24, Y+1	; 0x01
     ed4:	28 2f       	mov	r18, r24
     ed6:	30 e0       	ldi	r19, 0x00	; 0
     ed8:	3c 87       	std	Y+12, r19	; 0x0c
     eda:	2b 87       	std	Y+11, r18	; 0x0b
     edc:	8b 85       	ldd	r24, Y+11	; 0x0b
     ede:	9c 85       	ldd	r25, Y+12	; 0x0c
     ee0:	83 30       	cpi	r24, 0x03	; 3
     ee2:	91 05       	cpc	r25, r1
     ee4:	d9 f1       	breq	.+118    	; 0xf5c <Dio_vidSetPinDir+0x426>
     ee6:	2b 85       	ldd	r18, Y+11	; 0x0b
     ee8:	3c 85       	ldd	r19, Y+12	; 0x0c
     eea:	24 30       	cpi	r18, 0x04	; 4
     eec:	31 05       	cpc	r19, r1
     eee:	7c f4       	brge	.+30     	; 0xf0e <Dio_vidSetPinDir+0x3d8>
     ef0:	8b 85       	ldd	r24, Y+11	; 0x0b
     ef2:	9c 85       	ldd	r25, Y+12	; 0x0c
     ef4:	81 30       	cpi	r24, 0x01	; 1
     ef6:	91 05       	cpc	r25, r1
     ef8:	29 f1       	breq	.+74     	; 0xf44 <Dio_vidSetPinDir+0x40e>
     efa:	2b 85       	ldd	r18, Y+11	; 0x0b
     efc:	3c 85       	ldd	r19, Y+12	; 0x0c
     efe:	22 30       	cpi	r18, 0x02	; 2
     f00:	31 05       	cpc	r19, r1
     f02:	34 f5       	brge	.+76     	; 0xf50 <Dio_vidSetPinDir+0x41a>
     f04:	8b 85       	ldd	r24, Y+11	; 0x0b
     f06:	9c 85       	ldd	r25, Y+12	; 0x0c
     f08:	00 97       	sbiw	r24, 0x00	; 0
     f0a:	b1 f0       	breq	.+44     	; 0xf38 <Dio_vidSetPinDir+0x402>
     f0c:	71 c1       	rjmp	.+738    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
     f0e:	2b 85       	ldd	r18, Y+11	; 0x0b
     f10:	3c 85       	ldd	r19, Y+12	; 0x0c
     f12:	25 30       	cpi	r18, 0x05	; 5
     f14:	31 05       	cpc	r19, r1
     f16:	71 f1       	breq	.+92     	; 0xf74 <Dio_vidSetPinDir+0x43e>
     f18:	8b 85       	ldd	r24, Y+11	; 0x0b
     f1a:	9c 85       	ldd	r25, Y+12	; 0x0c
     f1c:	85 30       	cpi	r24, 0x05	; 5
     f1e:	91 05       	cpc	r25, r1
     f20:	1c f1       	brlt	.+70     	; 0xf68 <Dio_vidSetPinDir+0x432>
     f22:	2b 85       	ldd	r18, Y+11	; 0x0b
     f24:	3c 85       	ldd	r19, Y+12	; 0x0c
     f26:	26 30       	cpi	r18, 0x06	; 6
     f28:	31 05       	cpc	r19, r1
     f2a:	51 f1       	breq	.+84     	; 0xf80 <Dio_vidSetPinDir+0x44a>
     f2c:	8b 85       	ldd	r24, Y+11	; 0x0b
     f2e:	9c 85       	ldd	r25, Y+12	; 0x0c
     f30:	87 30       	cpi	r24, 0x07	; 7
     f32:	91 05       	cpc	r25, r1
     f34:	59 f1       	breq	.+86     	; 0xf8c <Dio_vidSetPinDir+0x456>
     f36:	5c c1       	rjmp	.+696    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					{
						case 0:
							DDRC.Bits.Pin0 =1;
     f38:	e4 e3       	ldi	r30, 0x34	; 52
     f3a:	f0 e0       	ldi	r31, 0x00	; 0
     f3c:	80 81       	ld	r24, Z
     f3e:	81 60       	ori	r24, 0x01	; 1
     f40:	80 83       	st	Z, r24
     f42:	56 c1       	rjmp	.+684    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 1:
							DDRC.Bits.Pin1 =1;
     f44:	e4 e3       	ldi	r30, 0x34	; 52
     f46:	f0 e0       	ldi	r31, 0x00	; 0
     f48:	80 81       	ld	r24, Z
     f4a:	82 60       	ori	r24, 0x02	; 2
     f4c:	80 83       	st	Z, r24
     f4e:	50 c1       	rjmp	.+672    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 2:
							DDRC.Bits.Pin2 =1;
     f50:	e4 e3       	ldi	r30, 0x34	; 52
     f52:	f0 e0       	ldi	r31, 0x00	; 0
     f54:	80 81       	ld	r24, Z
     f56:	84 60       	ori	r24, 0x04	; 4
     f58:	80 83       	st	Z, r24
     f5a:	4a c1       	rjmp	.+660    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 3:
							DDRC.Bits.Pin3 =1;
     f5c:	e4 e3       	ldi	r30, 0x34	; 52
     f5e:	f0 e0       	ldi	r31, 0x00	; 0
     f60:	80 81       	ld	r24, Z
     f62:	88 60       	ori	r24, 0x08	; 8
     f64:	80 83       	st	Z, r24
     f66:	44 c1       	rjmp	.+648    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 4:
							DDRC.Bits.Pin4 =1;
     f68:	e4 e3       	ldi	r30, 0x34	; 52
     f6a:	f0 e0       	ldi	r31, 0x00	; 0
     f6c:	80 81       	ld	r24, Z
     f6e:	80 61       	ori	r24, 0x10	; 16
     f70:	80 83       	st	Z, r24
     f72:	3e c1       	rjmp	.+636    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 5:
							DDRC.Bits.Pin5 =1;
     f74:	e4 e3       	ldi	r30, 0x34	; 52
     f76:	f0 e0       	ldi	r31, 0x00	; 0
     f78:	80 81       	ld	r24, Z
     f7a:	80 62       	ori	r24, 0x20	; 32
     f7c:	80 83       	st	Z, r24
     f7e:	38 c1       	rjmp	.+624    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 6:
							DDRC.Bits.Pin6 =1;
     f80:	e4 e3       	ldi	r30, 0x34	; 52
     f82:	f0 e0       	ldi	r31, 0x00	; 0
     f84:	80 81       	ld	r24, Z
     f86:	80 64       	ori	r24, 0x40	; 64
     f88:	80 83       	st	Z, r24
     f8a:	32 c1       	rjmp	.+612    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 7:
							DDRC.Bits.Pin7 =1;
     f8c:	e4 e3       	ldi	r30, 0x34	; 52
     f8e:	f0 e0       	ldi	r31, 0x00	; 0
     f90:	80 81       	ld	r24, Z
     f92:	80 68       	ori	r24, 0x80	; 128
     f94:	80 83       	st	Z, r24
     f96:	2c c1       	rjmp	.+600    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;
					}
				}
			else
			{
				switch(PinLoc)
     f98:	89 81       	ldd	r24, Y+1	; 0x01
     f9a:	28 2f       	mov	r18, r24
     f9c:	30 e0       	ldi	r19, 0x00	; 0
     f9e:	3a 87       	std	Y+10, r19	; 0x0a
     fa0:	29 87       	std	Y+9, r18	; 0x09
     fa2:	89 85       	ldd	r24, Y+9	; 0x09
     fa4:	9a 85       	ldd	r25, Y+10	; 0x0a
     fa6:	83 30       	cpi	r24, 0x03	; 3
     fa8:	91 05       	cpc	r25, r1
     faa:	d9 f1       	breq	.+118    	; 0x1022 <Dio_vidSetPinDir+0x4ec>
     fac:	29 85       	ldd	r18, Y+9	; 0x09
     fae:	3a 85       	ldd	r19, Y+10	; 0x0a
     fb0:	24 30       	cpi	r18, 0x04	; 4
     fb2:	31 05       	cpc	r19, r1
     fb4:	7c f4       	brge	.+30     	; 0xfd4 <Dio_vidSetPinDir+0x49e>
     fb6:	89 85       	ldd	r24, Y+9	; 0x09
     fb8:	9a 85       	ldd	r25, Y+10	; 0x0a
     fba:	81 30       	cpi	r24, 0x01	; 1
     fbc:	91 05       	cpc	r25, r1
     fbe:	29 f1       	breq	.+74     	; 0x100a <Dio_vidSetPinDir+0x4d4>
     fc0:	29 85       	ldd	r18, Y+9	; 0x09
     fc2:	3a 85       	ldd	r19, Y+10	; 0x0a
     fc4:	22 30       	cpi	r18, 0x02	; 2
     fc6:	31 05       	cpc	r19, r1
     fc8:	34 f5       	brge	.+76     	; 0x1016 <Dio_vidSetPinDir+0x4e0>
     fca:	89 85       	ldd	r24, Y+9	; 0x09
     fcc:	9a 85       	ldd	r25, Y+10	; 0x0a
     fce:	00 97       	sbiw	r24, 0x00	; 0
     fd0:	b1 f0       	breq	.+44     	; 0xffe <Dio_vidSetPinDir+0x4c8>
     fd2:	0e c1       	rjmp	.+540    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
     fd4:	29 85       	ldd	r18, Y+9	; 0x09
     fd6:	3a 85       	ldd	r19, Y+10	; 0x0a
     fd8:	25 30       	cpi	r18, 0x05	; 5
     fda:	31 05       	cpc	r19, r1
     fdc:	71 f1       	breq	.+92     	; 0x103a <Dio_vidSetPinDir+0x504>
     fde:	89 85       	ldd	r24, Y+9	; 0x09
     fe0:	9a 85       	ldd	r25, Y+10	; 0x0a
     fe2:	85 30       	cpi	r24, 0x05	; 5
     fe4:	91 05       	cpc	r25, r1
     fe6:	1c f1       	brlt	.+70     	; 0x102e <Dio_vidSetPinDir+0x4f8>
     fe8:	29 85       	ldd	r18, Y+9	; 0x09
     fea:	3a 85       	ldd	r19, Y+10	; 0x0a
     fec:	26 30       	cpi	r18, 0x06	; 6
     fee:	31 05       	cpc	r19, r1
     ff0:	51 f1       	breq	.+84     	; 0x1046 <Dio_vidSetPinDir+0x510>
     ff2:	89 85       	ldd	r24, Y+9	; 0x09
     ff4:	9a 85       	ldd	r25, Y+10	; 0x0a
     ff6:	87 30       	cpi	r24, 0x07	; 7
     ff8:	91 05       	cpc	r25, r1
     ffa:	59 f1       	breq	.+86     	; 0x1052 <Dio_vidSetPinDir+0x51c>
     ffc:	f9 c0       	rjmp	.+498    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
				{
					case 0:
						DDRC.Bits.Pin0 =0;
     ffe:	e4 e3       	ldi	r30, 0x34	; 52
    1000:	f0 e0       	ldi	r31, 0x00	; 0
    1002:	80 81       	ld	r24, Z
    1004:	8e 7f       	andi	r24, 0xFE	; 254
    1006:	80 83       	st	Z, r24
    1008:	f3 c0       	rjmp	.+486    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 1:
						DDRC.Bits.Pin1 =0;
    100a:	e4 e3       	ldi	r30, 0x34	; 52
    100c:	f0 e0       	ldi	r31, 0x00	; 0
    100e:	80 81       	ld	r24, Z
    1010:	8d 7f       	andi	r24, 0xFD	; 253
    1012:	80 83       	st	Z, r24
    1014:	ed c0       	rjmp	.+474    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 2:
						DDRC.Bits.Pin2 =0;
    1016:	e4 e3       	ldi	r30, 0x34	; 52
    1018:	f0 e0       	ldi	r31, 0x00	; 0
    101a:	80 81       	ld	r24, Z
    101c:	8b 7f       	andi	r24, 0xFB	; 251
    101e:	80 83       	st	Z, r24
    1020:	e7 c0       	rjmp	.+462    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 3:
						DDRC.Bits.Pin3 =0;
    1022:	e4 e3       	ldi	r30, 0x34	; 52
    1024:	f0 e0       	ldi	r31, 0x00	; 0
    1026:	80 81       	ld	r24, Z
    1028:	87 7f       	andi	r24, 0xF7	; 247
    102a:	80 83       	st	Z, r24
    102c:	e1 c0       	rjmp	.+450    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 4:
						DDRC.Bits.Pin4 =0;
    102e:	e4 e3       	ldi	r30, 0x34	; 52
    1030:	f0 e0       	ldi	r31, 0x00	; 0
    1032:	80 81       	ld	r24, Z
    1034:	8f 7e       	andi	r24, 0xEF	; 239
    1036:	80 83       	st	Z, r24
    1038:	db c0       	rjmp	.+438    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 5:
						DDRC.Bits.Pin5 =0;
    103a:	e4 e3       	ldi	r30, 0x34	; 52
    103c:	f0 e0       	ldi	r31, 0x00	; 0
    103e:	80 81       	ld	r24, Z
    1040:	8f 7d       	andi	r24, 0xDF	; 223
    1042:	80 83       	st	Z, r24
    1044:	d5 c0       	rjmp	.+426    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 6:
						DDRC.Bits.Pin6 =0;
    1046:	e4 e3       	ldi	r30, 0x34	; 52
    1048:	f0 e0       	ldi	r31, 0x00	; 0
    104a:	80 81       	ld	r24, Z
    104c:	8f 7b       	andi	r24, 0xBF	; 191
    104e:	80 83       	st	Z, r24
    1050:	cf c0       	rjmp	.+414    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 7:
						DDRC.Bits.Pin7 =0;
    1052:	e4 e3       	ldi	r30, 0x34	; 52
    1054:	f0 e0       	ldi	r31, 0x00	; 0
    1056:	80 81       	ld	r24, Z
    1058:	8f 77       	andi	r24, 0x7F	; 127
    105a:	80 83       	st	Z, r24
    105c:	c9 c0       	rjmp	.+402    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
			}
		break;


		case 3:
			if(Dir ==1)
    105e:	8c 81       	ldd	r24, Y+4	; 0x04
    1060:	81 30       	cpi	r24, 0x01	; 1
    1062:	09 f0       	breq	.+2      	; 0x1066 <Dio_vidSetPinDir+0x530>
    1064:	63 c0       	rjmp	.+198    	; 0x112c <Dio_vidSetPinDir+0x5f6>
				{
					switch(PinLoc)
    1066:	89 81       	ldd	r24, Y+1	; 0x01
    1068:	28 2f       	mov	r18, r24
    106a:	30 e0       	ldi	r19, 0x00	; 0
    106c:	38 87       	std	Y+8, r19	; 0x08
    106e:	2f 83       	std	Y+7, r18	; 0x07
    1070:	8f 81       	ldd	r24, Y+7	; 0x07
    1072:	98 85       	ldd	r25, Y+8	; 0x08
    1074:	83 30       	cpi	r24, 0x03	; 3
    1076:	91 05       	cpc	r25, r1
    1078:	d9 f1       	breq	.+118    	; 0x10f0 <Dio_vidSetPinDir+0x5ba>
    107a:	2f 81       	ldd	r18, Y+7	; 0x07
    107c:	38 85       	ldd	r19, Y+8	; 0x08
    107e:	24 30       	cpi	r18, 0x04	; 4
    1080:	31 05       	cpc	r19, r1
    1082:	7c f4       	brge	.+30     	; 0x10a2 <Dio_vidSetPinDir+0x56c>
    1084:	8f 81       	ldd	r24, Y+7	; 0x07
    1086:	98 85       	ldd	r25, Y+8	; 0x08
    1088:	81 30       	cpi	r24, 0x01	; 1
    108a:	91 05       	cpc	r25, r1
    108c:	29 f1       	breq	.+74     	; 0x10d8 <Dio_vidSetPinDir+0x5a2>
    108e:	2f 81       	ldd	r18, Y+7	; 0x07
    1090:	38 85       	ldd	r19, Y+8	; 0x08
    1092:	22 30       	cpi	r18, 0x02	; 2
    1094:	31 05       	cpc	r19, r1
    1096:	34 f5       	brge	.+76     	; 0x10e4 <Dio_vidSetPinDir+0x5ae>
    1098:	8f 81       	ldd	r24, Y+7	; 0x07
    109a:	98 85       	ldd	r25, Y+8	; 0x08
    109c:	00 97       	sbiw	r24, 0x00	; 0
    109e:	b1 f0       	breq	.+44     	; 0x10cc <Dio_vidSetPinDir+0x596>
    10a0:	a7 c0       	rjmp	.+334    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
    10a2:	2f 81       	ldd	r18, Y+7	; 0x07
    10a4:	38 85       	ldd	r19, Y+8	; 0x08
    10a6:	25 30       	cpi	r18, 0x05	; 5
    10a8:	31 05       	cpc	r19, r1
    10aa:	71 f1       	breq	.+92     	; 0x1108 <Dio_vidSetPinDir+0x5d2>
    10ac:	8f 81       	ldd	r24, Y+7	; 0x07
    10ae:	98 85       	ldd	r25, Y+8	; 0x08
    10b0:	85 30       	cpi	r24, 0x05	; 5
    10b2:	91 05       	cpc	r25, r1
    10b4:	1c f1       	brlt	.+70     	; 0x10fc <Dio_vidSetPinDir+0x5c6>
    10b6:	2f 81       	ldd	r18, Y+7	; 0x07
    10b8:	38 85       	ldd	r19, Y+8	; 0x08
    10ba:	26 30       	cpi	r18, 0x06	; 6
    10bc:	31 05       	cpc	r19, r1
    10be:	51 f1       	breq	.+84     	; 0x1114 <Dio_vidSetPinDir+0x5de>
    10c0:	8f 81       	ldd	r24, Y+7	; 0x07
    10c2:	98 85       	ldd	r25, Y+8	; 0x08
    10c4:	87 30       	cpi	r24, 0x07	; 7
    10c6:	91 05       	cpc	r25, r1
    10c8:	59 f1       	breq	.+86     	; 0x1120 <Dio_vidSetPinDir+0x5ea>
    10ca:	92 c0       	rjmp	.+292    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					{
						case 0:
							DDRD.Bits.Pin0 =1;
    10cc:	e1 e3       	ldi	r30, 0x31	; 49
    10ce:	f0 e0       	ldi	r31, 0x00	; 0
    10d0:	80 81       	ld	r24, Z
    10d2:	81 60       	ori	r24, 0x01	; 1
    10d4:	80 83       	st	Z, r24
    10d6:	8c c0       	rjmp	.+280    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 1:
							DDRD.Bits.Pin1 =1;
    10d8:	e1 e3       	ldi	r30, 0x31	; 49
    10da:	f0 e0       	ldi	r31, 0x00	; 0
    10dc:	80 81       	ld	r24, Z
    10de:	82 60       	ori	r24, 0x02	; 2
    10e0:	80 83       	st	Z, r24
    10e2:	86 c0       	rjmp	.+268    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 2:
							DDRD.Bits.Pin2 =1;
    10e4:	e1 e3       	ldi	r30, 0x31	; 49
    10e6:	f0 e0       	ldi	r31, 0x00	; 0
    10e8:	80 81       	ld	r24, Z
    10ea:	84 60       	ori	r24, 0x04	; 4
    10ec:	80 83       	st	Z, r24
    10ee:	80 c0       	rjmp	.+256    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 3:
							DDRD.Bits.Pin3 =1;
    10f0:	e1 e3       	ldi	r30, 0x31	; 49
    10f2:	f0 e0       	ldi	r31, 0x00	; 0
    10f4:	80 81       	ld	r24, Z
    10f6:	88 60       	ori	r24, 0x08	; 8
    10f8:	80 83       	st	Z, r24
    10fa:	7a c0       	rjmp	.+244    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 4:
							DDRD.Bits.Pin4 =1;
    10fc:	e1 e3       	ldi	r30, 0x31	; 49
    10fe:	f0 e0       	ldi	r31, 0x00	; 0
    1100:	80 81       	ld	r24, Z
    1102:	80 61       	ori	r24, 0x10	; 16
    1104:	80 83       	st	Z, r24
    1106:	74 c0       	rjmp	.+232    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 5:
							DDRD.Bits.Pin5 =1;
    1108:	e1 e3       	ldi	r30, 0x31	; 49
    110a:	f0 e0       	ldi	r31, 0x00	; 0
    110c:	80 81       	ld	r24, Z
    110e:	80 62       	ori	r24, 0x20	; 32
    1110:	80 83       	st	Z, r24
    1112:	6e c0       	rjmp	.+220    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 6:
							DDRD.Bits.Pin6 =1;
    1114:	e1 e3       	ldi	r30, 0x31	; 49
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	80 81       	ld	r24, Z
    111a:	80 64       	ori	r24, 0x40	; 64
    111c:	80 83       	st	Z, r24
    111e:	68 c0       	rjmp	.+208    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;

						case 7:
							DDRD.Bits.Pin7 =1;
    1120:	e1 e3       	ldi	r30, 0x31	; 49
    1122:	f0 e0       	ldi	r31, 0x00	; 0
    1124:	80 81       	ld	r24, Z
    1126:	80 68       	ori	r24, 0x80	; 128
    1128:	80 83       	st	Z, r24
    112a:	62 c0       	rjmp	.+196    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
						break;
					}
				}
			else
			{
				switch(PinLoc)
    112c:	89 81       	ldd	r24, Y+1	; 0x01
    112e:	28 2f       	mov	r18, r24
    1130:	30 e0       	ldi	r19, 0x00	; 0
    1132:	3e 83       	std	Y+6, r19	; 0x06
    1134:	2d 83       	std	Y+5, r18	; 0x05
    1136:	8d 81       	ldd	r24, Y+5	; 0x05
    1138:	9e 81       	ldd	r25, Y+6	; 0x06
    113a:	83 30       	cpi	r24, 0x03	; 3
    113c:	91 05       	cpc	r25, r1
    113e:	d9 f1       	breq	.+118    	; 0x11b6 <Dio_vidSetPinDir+0x680>
    1140:	2d 81       	ldd	r18, Y+5	; 0x05
    1142:	3e 81       	ldd	r19, Y+6	; 0x06
    1144:	24 30       	cpi	r18, 0x04	; 4
    1146:	31 05       	cpc	r19, r1
    1148:	7c f4       	brge	.+30     	; 0x1168 <Dio_vidSetPinDir+0x632>
    114a:	8d 81       	ldd	r24, Y+5	; 0x05
    114c:	9e 81       	ldd	r25, Y+6	; 0x06
    114e:	81 30       	cpi	r24, 0x01	; 1
    1150:	91 05       	cpc	r25, r1
    1152:	29 f1       	breq	.+74     	; 0x119e <Dio_vidSetPinDir+0x668>
    1154:	2d 81       	ldd	r18, Y+5	; 0x05
    1156:	3e 81       	ldd	r19, Y+6	; 0x06
    1158:	22 30       	cpi	r18, 0x02	; 2
    115a:	31 05       	cpc	r19, r1
    115c:	34 f5       	brge	.+76     	; 0x11aa <Dio_vidSetPinDir+0x674>
    115e:	8d 81       	ldd	r24, Y+5	; 0x05
    1160:	9e 81       	ldd	r25, Y+6	; 0x06
    1162:	00 97       	sbiw	r24, 0x00	; 0
    1164:	b1 f0       	breq	.+44     	; 0x1192 <Dio_vidSetPinDir+0x65c>
    1166:	44 c0       	rjmp	.+136    	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
    1168:	2d 81       	ldd	r18, Y+5	; 0x05
    116a:	3e 81       	ldd	r19, Y+6	; 0x06
    116c:	25 30       	cpi	r18, 0x05	; 5
    116e:	31 05       	cpc	r19, r1
    1170:	71 f1       	breq	.+92     	; 0x11ce <Dio_vidSetPinDir+0x698>
    1172:	8d 81       	ldd	r24, Y+5	; 0x05
    1174:	9e 81       	ldd	r25, Y+6	; 0x06
    1176:	85 30       	cpi	r24, 0x05	; 5
    1178:	91 05       	cpc	r25, r1
    117a:	1c f1       	brlt	.+70     	; 0x11c2 <Dio_vidSetPinDir+0x68c>
    117c:	2d 81       	ldd	r18, Y+5	; 0x05
    117e:	3e 81       	ldd	r19, Y+6	; 0x06
    1180:	26 30       	cpi	r18, 0x06	; 6
    1182:	31 05       	cpc	r19, r1
    1184:	51 f1       	breq	.+84     	; 0x11da <Dio_vidSetPinDir+0x6a4>
    1186:	8d 81       	ldd	r24, Y+5	; 0x05
    1188:	9e 81       	ldd	r25, Y+6	; 0x06
    118a:	87 30       	cpi	r24, 0x07	; 7
    118c:	91 05       	cpc	r25, r1
    118e:	59 f1       	breq	.+86     	; 0x11e6 <Dio_vidSetPinDir+0x6b0>
    1190:	2f c0       	rjmp	.+94     	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
				{
					case 0:
						DDRD.Bits.Pin0 =0;
    1192:	e1 e3       	ldi	r30, 0x31	; 49
    1194:	f0 e0       	ldi	r31, 0x00	; 0
    1196:	80 81       	ld	r24, Z
    1198:	8e 7f       	andi	r24, 0xFE	; 254
    119a:	80 83       	st	Z, r24
    119c:	29 c0       	rjmp	.+82     	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 1:
						DDRD.Bits.Pin1 =0;
    119e:	e1 e3       	ldi	r30, 0x31	; 49
    11a0:	f0 e0       	ldi	r31, 0x00	; 0
    11a2:	80 81       	ld	r24, Z
    11a4:	8d 7f       	andi	r24, 0xFD	; 253
    11a6:	80 83       	st	Z, r24
    11a8:	23 c0       	rjmp	.+70     	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 2:
						DDRD.Bits.Pin2 =0;
    11aa:	e1 e3       	ldi	r30, 0x31	; 49
    11ac:	f0 e0       	ldi	r31, 0x00	; 0
    11ae:	80 81       	ld	r24, Z
    11b0:	8b 7f       	andi	r24, 0xFB	; 251
    11b2:	80 83       	st	Z, r24
    11b4:	1d c0       	rjmp	.+58     	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 3:
						DDRD.Bits.Pin3 =0;
    11b6:	e1 e3       	ldi	r30, 0x31	; 49
    11b8:	f0 e0       	ldi	r31, 0x00	; 0
    11ba:	80 81       	ld	r24, Z
    11bc:	87 7f       	andi	r24, 0xF7	; 247
    11be:	80 83       	st	Z, r24
    11c0:	17 c0       	rjmp	.+46     	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 4:
						DDRD.Bits.Pin4 =0;
    11c2:	e1 e3       	ldi	r30, 0x31	; 49
    11c4:	f0 e0       	ldi	r31, 0x00	; 0
    11c6:	80 81       	ld	r24, Z
    11c8:	8f 7e       	andi	r24, 0xEF	; 239
    11ca:	80 83       	st	Z, r24
    11cc:	11 c0       	rjmp	.+34     	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 5:
						DDRD.Bits.Pin5 =0;
    11ce:	e1 e3       	ldi	r30, 0x31	; 49
    11d0:	f0 e0       	ldi	r31, 0x00	; 0
    11d2:	80 81       	ld	r24, Z
    11d4:	8f 7d       	andi	r24, 0xDF	; 223
    11d6:	80 83       	st	Z, r24
    11d8:	0b c0       	rjmp	.+22     	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 6:
						DDRD.Bits.Pin6 =0;
    11da:	e1 e3       	ldi	r30, 0x31	; 49
    11dc:	f0 e0       	ldi	r31, 0x00	; 0
    11de:	80 81       	ld	r24, Z
    11e0:	8f 7b       	andi	r24, 0xBF	; 191
    11e2:	80 83       	st	Z, r24
    11e4:	05 c0       	rjmp	.+10     	; 0x11f0 <Dio_vidSetPinDir+0x6ba>
					break;

					case 7:
						DDRD.Bits.Pin7 =0;
    11e6:	e1 e3       	ldi	r30, 0x31	; 49
    11e8:	f0 e0       	ldi	r31, 0x00	; 0
    11ea:	80 81       	ld	r24, Z
    11ec:	8f 77       	andi	r24, 0x7F	; 127
    11ee:	80 83       	st	Z, r24
					break;
				}
			}
		break;
	}
}
    11f0:	66 96       	adiw	r28, 0x16	; 22
    11f2:	0f b6       	in	r0, 0x3f	; 63
    11f4:	f8 94       	cli
    11f6:	de bf       	out	0x3e, r29	; 62
    11f8:	0f be       	out	0x3f, r0	; 63
    11fa:	cd bf       	out	0x3d, r28	; 61
    11fc:	cf 91       	pop	r28
    11fe:	df 91       	pop	r29
    1200:	08 95       	ret

00001202 <Dio_vidSetPinVal>:

void Dio_vidSetPinVal(u8 Pin , u8 Val)
{
    1202:	df 93       	push	r29
    1204:	cf 93       	push	r28
    1206:	cd b7       	in	r28, 0x3d	; 61
    1208:	de b7       	in	r29, 0x3e	; 62
    120a:	66 97       	sbiw	r28, 0x16	; 22
    120c:	0f b6       	in	r0, 0x3f	; 63
    120e:	f8 94       	cli
    1210:	de bf       	out	0x3e, r29	; 62
    1212:	0f be       	out	0x3f, r0	; 63
    1214:	cd bf       	out	0x3d, r28	; 61
    1216:	8b 83       	std	Y+3, r24	; 0x03
    1218:	6c 83       	std	Y+4, r22	; 0x04
	u8 PortId;
	u8 PinLoc;

	PortId = Pin/8;
    121a:	8b 81       	ldd	r24, Y+3	; 0x03
    121c:	86 95       	lsr	r24
    121e:	86 95       	lsr	r24
    1220:	86 95       	lsr	r24
    1222:	8a 83       	std	Y+2, r24	; 0x02
	PinLoc = Pin%8;
    1224:	8b 81       	ldd	r24, Y+3	; 0x03
    1226:	87 70       	andi	r24, 0x07	; 7
    1228:	89 83       	std	Y+1, r24	; 0x01

	switch(PortId){
    122a:	8a 81       	ldd	r24, Y+2	; 0x02
    122c:	28 2f       	mov	r18, r24
    122e:	30 e0       	ldi	r19, 0x00	; 0
    1230:	3e 8b       	std	Y+22, r19	; 0x16
    1232:	2d 8b       	std	Y+21, r18	; 0x15
    1234:	8d 89       	ldd	r24, Y+21	; 0x15
    1236:	9e 89       	ldd	r25, Y+22	; 0x16
    1238:	81 30       	cpi	r24, 0x01	; 1
    123a:	91 05       	cpc	r25, r1
    123c:	09 f4       	brne	.+2      	; 0x1240 <Dio_vidSetPinVal+0x3e>
    123e:	e1 c0       	rjmp	.+450    	; 0x1402 <Dio_vidSetPinVal+0x200>
    1240:	2d 89       	ldd	r18, Y+21	; 0x15
    1242:	3e 89       	ldd	r19, Y+22	; 0x16
    1244:	22 30       	cpi	r18, 0x02	; 2
    1246:	31 05       	cpc	r19, r1
    1248:	2c f4       	brge	.+10     	; 0x1254 <Dio_vidSetPinVal+0x52>
    124a:	8d 89       	ldd	r24, Y+21	; 0x15
    124c:	9e 89       	ldd	r25, Y+22	; 0x16
    124e:	00 97       	sbiw	r24, 0x00	; 0
    1250:	71 f0       	breq	.+28     	; 0x126e <Dio_vidSetPinVal+0x6c>
    1252:	34 c3       	rjmp	.+1640   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
    1254:	2d 89       	ldd	r18, Y+21	; 0x15
    1256:	3e 89       	ldd	r19, Y+22	; 0x16
    1258:	22 30       	cpi	r18, 0x02	; 2
    125a:	31 05       	cpc	r19, r1
    125c:	09 f4       	brne	.+2      	; 0x1260 <Dio_vidSetPinVal+0x5e>
    125e:	9b c1       	rjmp	.+822    	; 0x1596 <Dio_vidSetPinVal+0x394>
    1260:	8d 89       	ldd	r24, Y+21	; 0x15
    1262:	9e 89       	ldd	r25, Y+22	; 0x16
    1264:	83 30       	cpi	r24, 0x03	; 3
    1266:	91 05       	cpc	r25, r1
    1268:	09 f4       	brne	.+2      	; 0x126c <Dio_vidSetPinVal+0x6a>
    126a:	5f c2       	rjmp	.+1214   	; 0x172a <Dio_vidSetPinVal+0x528>
    126c:	27 c3       	rjmp	.+1614   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
		case 0:
			if(Val ==1)
    126e:	8c 81       	ldd	r24, Y+4	; 0x04
    1270:	81 30       	cpi	r24, 0x01	; 1
    1272:	09 f0       	breq	.+2      	; 0x1276 <Dio_vidSetPinVal+0x74>
    1274:	63 c0       	rjmp	.+198    	; 0x133c <Dio_vidSetPinVal+0x13a>
				{
					switch(PinLoc)
    1276:	89 81       	ldd	r24, Y+1	; 0x01
    1278:	28 2f       	mov	r18, r24
    127a:	30 e0       	ldi	r19, 0x00	; 0
    127c:	3c 8b       	std	Y+20, r19	; 0x14
    127e:	2b 8b       	std	Y+19, r18	; 0x13
    1280:	8b 89       	ldd	r24, Y+19	; 0x13
    1282:	9c 89       	ldd	r25, Y+20	; 0x14
    1284:	83 30       	cpi	r24, 0x03	; 3
    1286:	91 05       	cpc	r25, r1
    1288:	d9 f1       	breq	.+118    	; 0x1300 <Dio_vidSetPinVal+0xfe>
    128a:	2b 89       	ldd	r18, Y+19	; 0x13
    128c:	3c 89       	ldd	r19, Y+20	; 0x14
    128e:	24 30       	cpi	r18, 0x04	; 4
    1290:	31 05       	cpc	r19, r1
    1292:	7c f4       	brge	.+30     	; 0x12b2 <Dio_vidSetPinVal+0xb0>
    1294:	8b 89       	ldd	r24, Y+19	; 0x13
    1296:	9c 89       	ldd	r25, Y+20	; 0x14
    1298:	81 30       	cpi	r24, 0x01	; 1
    129a:	91 05       	cpc	r25, r1
    129c:	29 f1       	breq	.+74     	; 0x12e8 <Dio_vidSetPinVal+0xe6>
    129e:	2b 89       	ldd	r18, Y+19	; 0x13
    12a0:	3c 89       	ldd	r19, Y+20	; 0x14
    12a2:	22 30       	cpi	r18, 0x02	; 2
    12a4:	31 05       	cpc	r19, r1
    12a6:	34 f5       	brge	.+76     	; 0x12f4 <Dio_vidSetPinVal+0xf2>
    12a8:	8b 89       	ldd	r24, Y+19	; 0x13
    12aa:	9c 89       	ldd	r25, Y+20	; 0x14
    12ac:	00 97       	sbiw	r24, 0x00	; 0
    12ae:	b1 f0       	breq	.+44     	; 0x12dc <Dio_vidSetPinVal+0xda>
    12b0:	05 c3       	rjmp	.+1546   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
    12b2:	2b 89       	ldd	r18, Y+19	; 0x13
    12b4:	3c 89       	ldd	r19, Y+20	; 0x14
    12b6:	25 30       	cpi	r18, 0x05	; 5
    12b8:	31 05       	cpc	r19, r1
    12ba:	71 f1       	breq	.+92     	; 0x1318 <Dio_vidSetPinVal+0x116>
    12bc:	8b 89       	ldd	r24, Y+19	; 0x13
    12be:	9c 89       	ldd	r25, Y+20	; 0x14
    12c0:	85 30       	cpi	r24, 0x05	; 5
    12c2:	91 05       	cpc	r25, r1
    12c4:	1c f1       	brlt	.+70     	; 0x130c <Dio_vidSetPinVal+0x10a>
    12c6:	2b 89       	ldd	r18, Y+19	; 0x13
    12c8:	3c 89       	ldd	r19, Y+20	; 0x14
    12ca:	26 30       	cpi	r18, 0x06	; 6
    12cc:	31 05       	cpc	r19, r1
    12ce:	51 f1       	breq	.+84     	; 0x1324 <Dio_vidSetPinVal+0x122>
    12d0:	8b 89       	ldd	r24, Y+19	; 0x13
    12d2:	9c 89       	ldd	r25, Y+20	; 0x14
    12d4:	87 30       	cpi	r24, 0x07	; 7
    12d6:	91 05       	cpc	r25, r1
    12d8:	59 f1       	breq	.+86     	; 0x1330 <Dio_vidSetPinVal+0x12e>
    12da:	f0 c2       	rjmp	.+1504   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					{
						case 0:
							PORTA.Bits.Pin0 =1;
    12dc:	eb e3       	ldi	r30, 0x3B	; 59
    12de:	f0 e0       	ldi	r31, 0x00	; 0
    12e0:	80 81       	ld	r24, Z
    12e2:	81 60       	ori	r24, 0x01	; 1
    12e4:	80 83       	st	Z, r24
    12e6:	ea c2       	rjmp	.+1492   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 1:
							PORTA.Bits.Pin1 =1;
    12e8:	eb e3       	ldi	r30, 0x3B	; 59
    12ea:	f0 e0       	ldi	r31, 0x00	; 0
    12ec:	80 81       	ld	r24, Z
    12ee:	82 60       	ori	r24, 0x02	; 2
    12f0:	80 83       	st	Z, r24
    12f2:	e4 c2       	rjmp	.+1480   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 2:
							PORTA.Bits.Pin2 =1;
    12f4:	eb e3       	ldi	r30, 0x3B	; 59
    12f6:	f0 e0       	ldi	r31, 0x00	; 0
    12f8:	80 81       	ld	r24, Z
    12fa:	84 60       	ori	r24, 0x04	; 4
    12fc:	80 83       	st	Z, r24
    12fe:	de c2       	rjmp	.+1468   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 3:
							PORTA.Bits.Pin3 =1;
    1300:	eb e3       	ldi	r30, 0x3B	; 59
    1302:	f0 e0       	ldi	r31, 0x00	; 0
    1304:	80 81       	ld	r24, Z
    1306:	88 60       	ori	r24, 0x08	; 8
    1308:	80 83       	st	Z, r24
    130a:	d8 c2       	rjmp	.+1456   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 4:
							PORTA.Bits.Pin4 =1;
    130c:	eb e3       	ldi	r30, 0x3B	; 59
    130e:	f0 e0       	ldi	r31, 0x00	; 0
    1310:	80 81       	ld	r24, Z
    1312:	80 61       	ori	r24, 0x10	; 16
    1314:	80 83       	st	Z, r24
    1316:	d2 c2       	rjmp	.+1444   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 5:
							PORTA.Bits.Pin5 =1;
    1318:	eb e3       	ldi	r30, 0x3B	; 59
    131a:	f0 e0       	ldi	r31, 0x00	; 0
    131c:	80 81       	ld	r24, Z
    131e:	80 62       	ori	r24, 0x20	; 32
    1320:	80 83       	st	Z, r24
    1322:	cc c2       	rjmp	.+1432   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 6:
							PORTA.Bits.Pin6 =1;
    1324:	eb e3       	ldi	r30, 0x3B	; 59
    1326:	f0 e0       	ldi	r31, 0x00	; 0
    1328:	80 81       	ld	r24, Z
    132a:	80 64       	ori	r24, 0x40	; 64
    132c:	80 83       	st	Z, r24
    132e:	c6 c2       	rjmp	.+1420   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 7:
							PORTA.Bits.Pin7 =1;
    1330:	eb e3       	ldi	r30, 0x3B	; 59
    1332:	f0 e0       	ldi	r31, 0x00	; 0
    1334:	80 81       	ld	r24, Z
    1336:	80 68       	ori	r24, 0x80	; 128
    1338:	80 83       	st	Z, r24
    133a:	c0 c2       	rjmp	.+1408   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;
					}
				}
			else
			{
				switch(PinLoc)
    133c:	89 81       	ldd	r24, Y+1	; 0x01
    133e:	28 2f       	mov	r18, r24
    1340:	30 e0       	ldi	r19, 0x00	; 0
    1342:	3a 8b       	std	Y+18, r19	; 0x12
    1344:	29 8b       	std	Y+17, r18	; 0x11
    1346:	89 89       	ldd	r24, Y+17	; 0x11
    1348:	9a 89       	ldd	r25, Y+18	; 0x12
    134a:	83 30       	cpi	r24, 0x03	; 3
    134c:	91 05       	cpc	r25, r1
    134e:	d9 f1       	breq	.+118    	; 0x13c6 <Dio_vidSetPinVal+0x1c4>
    1350:	29 89       	ldd	r18, Y+17	; 0x11
    1352:	3a 89       	ldd	r19, Y+18	; 0x12
    1354:	24 30       	cpi	r18, 0x04	; 4
    1356:	31 05       	cpc	r19, r1
    1358:	7c f4       	brge	.+30     	; 0x1378 <Dio_vidSetPinVal+0x176>
    135a:	89 89       	ldd	r24, Y+17	; 0x11
    135c:	9a 89       	ldd	r25, Y+18	; 0x12
    135e:	81 30       	cpi	r24, 0x01	; 1
    1360:	91 05       	cpc	r25, r1
    1362:	29 f1       	breq	.+74     	; 0x13ae <Dio_vidSetPinVal+0x1ac>
    1364:	29 89       	ldd	r18, Y+17	; 0x11
    1366:	3a 89       	ldd	r19, Y+18	; 0x12
    1368:	22 30       	cpi	r18, 0x02	; 2
    136a:	31 05       	cpc	r19, r1
    136c:	34 f5       	brge	.+76     	; 0x13ba <Dio_vidSetPinVal+0x1b8>
    136e:	89 89       	ldd	r24, Y+17	; 0x11
    1370:	9a 89       	ldd	r25, Y+18	; 0x12
    1372:	00 97       	sbiw	r24, 0x00	; 0
    1374:	b1 f0       	breq	.+44     	; 0x13a2 <Dio_vidSetPinVal+0x1a0>
    1376:	a2 c2       	rjmp	.+1348   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
    1378:	29 89       	ldd	r18, Y+17	; 0x11
    137a:	3a 89       	ldd	r19, Y+18	; 0x12
    137c:	25 30       	cpi	r18, 0x05	; 5
    137e:	31 05       	cpc	r19, r1
    1380:	71 f1       	breq	.+92     	; 0x13de <Dio_vidSetPinVal+0x1dc>
    1382:	89 89       	ldd	r24, Y+17	; 0x11
    1384:	9a 89       	ldd	r25, Y+18	; 0x12
    1386:	85 30       	cpi	r24, 0x05	; 5
    1388:	91 05       	cpc	r25, r1
    138a:	1c f1       	brlt	.+70     	; 0x13d2 <Dio_vidSetPinVal+0x1d0>
    138c:	29 89       	ldd	r18, Y+17	; 0x11
    138e:	3a 89       	ldd	r19, Y+18	; 0x12
    1390:	26 30       	cpi	r18, 0x06	; 6
    1392:	31 05       	cpc	r19, r1
    1394:	51 f1       	breq	.+84     	; 0x13ea <Dio_vidSetPinVal+0x1e8>
    1396:	89 89       	ldd	r24, Y+17	; 0x11
    1398:	9a 89       	ldd	r25, Y+18	; 0x12
    139a:	87 30       	cpi	r24, 0x07	; 7
    139c:	91 05       	cpc	r25, r1
    139e:	59 f1       	breq	.+86     	; 0x13f6 <Dio_vidSetPinVal+0x1f4>
    13a0:	8d c2       	rjmp	.+1306   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
				{
					case 0:
						PORTA.Bits.Pin0 =0;
    13a2:	eb e3       	ldi	r30, 0x3B	; 59
    13a4:	f0 e0       	ldi	r31, 0x00	; 0
    13a6:	80 81       	ld	r24, Z
    13a8:	8e 7f       	andi	r24, 0xFE	; 254
    13aa:	80 83       	st	Z, r24
    13ac:	87 c2       	rjmp	.+1294   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 1:
						PORTA.Bits.Pin1 =0;
    13ae:	eb e3       	ldi	r30, 0x3B	; 59
    13b0:	f0 e0       	ldi	r31, 0x00	; 0
    13b2:	80 81       	ld	r24, Z
    13b4:	8d 7f       	andi	r24, 0xFD	; 253
    13b6:	80 83       	st	Z, r24
    13b8:	81 c2       	rjmp	.+1282   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 2:
						PORTA.Bits.Pin2 =0;
    13ba:	eb e3       	ldi	r30, 0x3B	; 59
    13bc:	f0 e0       	ldi	r31, 0x00	; 0
    13be:	80 81       	ld	r24, Z
    13c0:	8b 7f       	andi	r24, 0xFB	; 251
    13c2:	80 83       	st	Z, r24
    13c4:	7b c2       	rjmp	.+1270   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 3:
						PORTA.Bits.Pin3 =0;
    13c6:	eb e3       	ldi	r30, 0x3B	; 59
    13c8:	f0 e0       	ldi	r31, 0x00	; 0
    13ca:	80 81       	ld	r24, Z
    13cc:	87 7f       	andi	r24, 0xF7	; 247
    13ce:	80 83       	st	Z, r24
    13d0:	75 c2       	rjmp	.+1258   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 4:
						PORTA.Bits.Pin4 =0;
    13d2:	eb e3       	ldi	r30, 0x3B	; 59
    13d4:	f0 e0       	ldi	r31, 0x00	; 0
    13d6:	80 81       	ld	r24, Z
    13d8:	8f 7e       	andi	r24, 0xEF	; 239
    13da:	80 83       	st	Z, r24
    13dc:	6f c2       	rjmp	.+1246   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 5:
						PORTA.Bits.Pin5 =0;
    13de:	eb e3       	ldi	r30, 0x3B	; 59
    13e0:	f0 e0       	ldi	r31, 0x00	; 0
    13e2:	80 81       	ld	r24, Z
    13e4:	8f 7d       	andi	r24, 0xDF	; 223
    13e6:	80 83       	st	Z, r24
    13e8:	69 c2       	rjmp	.+1234   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 6:
						PORTA.Bits.Pin6 =0;
    13ea:	eb e3       	ldi	r30, 0x3B	; 59
    13ec:	f0 e0       	ldi	r31, 0x00	; 0
    13ee:	80 81       	ld	r24, Z
    13f0:	8f 7b       	andi	r24, 0xBF	; 191
    13f2:	80 83       	st	Z, r24
    13f4:	63 c2       	rjmp	.+1222   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 7:
						PORTA.Bits.Pin7 =0;
    13f6:	eb e3       	ldi	r30, 0x3B	; 59
    13f8:	f0 e0       	ldi	r31, 0x00	; 0
    13fa:	80 81       	ld	r24, Z
    13fc:	8f 77       	andi	r24, 0x7F	; 127
    13fe:	80 83       	st	Z, r24
    1400:	5d c2       	rjmp	.+1210   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
				}
			}
		break;

		case 1:
			if(Val ==1)
    1402:	8c 81       	ldd	r24, Y+4	; 0x04
    1404:	81 30       	cpi	r24, 0x01	; 1
    1406:	09 f0       	breq	.+2      	; 0x140a <Dio_vidSetPinVal+0x208>
    1408:	63 c0       	rjmp	.+198    	; 0x14d0 <Dio_vidSetPinVal+0x2ce>
				{
					switch(PinLoc)
    140a:	89 81       	ldd	r24, Y+1	; 0x01
    140c:	28 2f       	mov	r18, r24
    140e:	30 e0       	ldi	r19, 0x00	; 0
    1410:	38 8b       	std	Y+16, r19	; 0x10
    1412:	2f 87       	std	Y+15, r18	; 0x0f
    1414:	8f 85       	ldd	r24, Y+15	; 0x0f
    1416:	98 89       	ldd	r25, Y+16	; 0x10
    1418:	83 30       	cpi	r24, 0x03	; 3
    141a:	91 05       	cpc	r25, r1
    141c:	d9 f1       	breq	.+118    	; 0x1494 <Dio_vidSetPinVal+0x292>
    141e:	2f 85       	ldd	r18, Y+15	; 0x0f
    1420:	38 89       	ldd	r19, Y+16	; 0x10
    1422:	24 30       	cpi	r18, 0x04	; 4
    1424:	31 05       	cpc	r19, r1
    1426:	7c f4       	brge	.+30     	; 0x1446 <Dio_vidSetPinVal+0x244>
    1428:	8f 85       	ldd	r24, Y+15	; 0x0f
    142a:	98 89       	ldd	r25, Y+16	; 0x10
    142c:	81 30       	cpi	r24, 0x01	; 1
    142e:	91 05       	cpc	r25, r1
    1430:	29 f1       	breq	.+74     	; 0x147c <Dio_vidSetPinVal+0x27a>
    1432:	2f 85       	ldd	r18, Y+15	; 0x0f
    1434:	38 89       	ldd	r19, Y+16	; 0x10
    1436:	22 30       	cpi	r18, 0x02	; 2
    1438:	31 05       	cpc	r19, r1
    143a:	34 f5       	brge	.+76     	; 0x1488 <Dio_vidSetPinVal+0x286>
    143c:	8f 85       	ldd	r24, Y+15	; 0x0f
    143e:	98 89       	ldd	r25, Y+16	; 0x10
    1440:	00 97       	sbiw	r24, 0x00	; 0
    1442:	b1 f0       	breq	.+44     	; 0x1470 <Dio_vidSetPinVal+0x26e>
    1444:	3b c2       	rjmp	.+1142   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
    1446:	2f 85       	ldd	r18, Y+15	; 0x0f
    1448:	38 89       	ldd	r19, Y+16	; 0x10
    144a:	25 30       	cpi	r18, 0x05	; 5
    144c:	31 05       	cpc	r19, r1
    144e:	71 f1       	breq	.+92     	; 0x14ac <Dio_vidSetPinVal+0x2aa>
    1450:	8f 85       	ldd	r24, Y+15	; 0x0f
    1452:	98 89       	ldd	r25, Y+16	; 0x10
    1454:	85 30       	cpi	r24, 0x05	; 5
    1456:	91 05       	cpc	r25, r1
    1458:	1c f1       	brlt	.+70     	; 0x14a0 <Dio_vidSetPinVal+0x29e>
    145a:	2f 85       	ldd	r18, Y+15	; 0x0f
    145c:	38 89       	ldd	r19, Y+16	; 0x10
    145e:	26 30       	cpi	r18, 0x06	; 6
    1460:	31 05       	cpc	r19, r1
    1462:	51 f1       	breq	.+84     	; 0x14b8 <Dio_vidSetPinVal+0x2b6>
    1464:	8f 85       	ldd	r24, Y+15	; 0x0f
    1466:	98 89       	ldd	r25, Y+16	; 0x10
    1468:	87 30       	cpi	r24, 0x07	; 7
    146a:	91 05       	cpc	r25, r1
    146c:	59 f1       	breq	.+86     	; 0x14c4 <Dio_vidSetPinVal+0x2c2>
    146e:	26 c2       	rjmp	.+1100   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					{
						case 0:
							PORTB.Bits.Pin0 =1;
    1470:	e8 e3       	ldi	r30, 0x38	; 56
    1472:	f0 e0       	ldi	r31, 0x00	; 0
    1474:	80 81       	ld	r24, Z
    1476:	81 60       	ori	r24, 0x01	; 1
    1478:	80 83       	st	Z, r24
    147a:	20 c2       	rjmp	.+1088   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 1:
							PORTB.Bits.Pin1 =1;
    147c:	e8 e3       	ldi	r30, 0x38	; 56
    147e:	f0 e0       	ldi	r31, 0x00	; 0
    1480:	80 81       	ld	r24, Z
    1482:	82 60       	ori	r24, 0x02	; 2
    1484:	80 83       	st	Z, r24
    1486:	1a c2       	rjmp	.+1076   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 2:
							PORTB.Bits.Pin2 =1;
    1488:	e8 e3       	ldi	r30, 0x38	; 56
    148a:	f0 e0       	ldi	r31, 0x00	; 0
    148c:	80 81       	ld	r24, Z
    148e:	84 60       	ori	r24, 0x04	; 4
    1490:	80 83       	st	Z, r24
    1492:	14 c2       	rjmp	.+1064   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 3:
							PORTB.Bits.Pin3 =1;
    1494:	e8 e3       	ldi	r30, 0x38	; 56
    1496:	f0 e0       	ldi	r31, 0x00	; 0
    1498:	80 81       	ld	r24, Z
    149a:	88 60       	ori	r24, 0x08	; 8
    149c:	80 83       	st	Z, r24
    149e:	0e c2       	rjmp	.+1052   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 4:
							PORTB.Bits.Pin4 =1;
    14a0:	e8 e3       	ldi	r30, 0x38	; 56
    14a2:	f0 e0       	ldi	r31, 0x00	; 0
    14a4:	80 81       	ld	r24, Z
    14a6:	80 61       	ori	r24, 0x10	; 16
    14a8:	80 83       	st	Z, r24
    14aa:	08 c2       	rjmp	.+1040   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 5:
							PORTB.Bits.Pin5 =1;
    14ac:	e8 e3       	ldi	r30, 0x38	; 56
    14ae:	f0 e0       	ldi	r31, 0x00	; 0
    14b0:	80 81       	ld	r24, Z
    14b2:	80 62       	ori	r24, 0x20	; 32
    14b4:	80 83       	st	Z, r24
    14b6:	02 c2       	rjmp	.+1028   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 6:
							PORTB.Bits.Pin6 =1;
    14b8:	e8 e3       	ldi	r30, 0x38	; 56
    14ba:	f0 e0       	ldi	r31, 0x00	; 0
    14bc:	80 81       	ld	r24, Z
    14be:	80 64       	ori	r24, 0x40	; 64
    14c0:	80 83       	st	Z, r24
    14c2:	fc c1       	rjmp	.+1016   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 7:
							PORTB.Bits.Pin7 =1;
    14c4:	e8 e3       	ldi	r30, 0x38	; 56
    14c6:	f0 e0       	ldi	r31, 0x00	; 0
    14c8:	80 81       	ld	r24, Z
    14ca:	80 68       	ori	r24, 0x80	; 128
    14cc:	80 83       	st	Z, r24
    14ce:	f6 c1       	rjmp	.+1004   	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;
					}
				}
			else
			{
				switch(PinLoc)
    14d0:	89 81       	ldd	r24, Y+1	; 0x01
    14d2:	28 2f       	mov	r18, r24
    14d4:	30 e0       	ldi	r19, 0x00	; 0
    14d6:	3e 87       	std	Y+14, r19	; 0x0e
    14d8:	2d 87       	std	Y+13, r18	; 0x0d
    14da:	8d 85       	ldd	r24, Y+13	; 0x0d
    14dc:	9e 85       	ldd	r25, Y+14	; 0x0e
    14de:	83 30       	cpi	r24, 0x03	; 3
    14e0:	91 05       	cpc	r25, r1
    14e2:	d9 f1       	breq	.+118    	; 0x155a <Dio_vidSetPinVal+0x358>
    14e4:	2d 85       	ldd	r18, Y+13	; 0x0d
    14e6:	3e 85       	ldd	r19, Y+14	; 0x0e
    14e8:	24 30       	cpi	r18, 0x04	; 4
    14ea:	31 05       	cpc	r19, r1
    14ec:	7c f4       	brge	.+30     	; 0x150c <Dio_vidSetPinVal+0x30a>
    14ee:	8d 85       	ldd	r24, Y+13	; 0x0d
    14f0:	9e 85       	ldd	r25, Y+14	; 0x0e
    14f2:	81 30       	cpi	r24, 0x01	; 1
    14f4:	91 05       	cpc	r25, r1
    14f6:	29 f1       	breq	.+74     	; 0x1542 <Dio_vidSetPinVal+0x340>
    14f8:	2d 85       	ldd	r18, Y+13	; 0x0d
    14fa:	3e 85       	ldd	r19, Y+14	; 0x0e
    14fc:	22 30       	cpi	r18, 0x02	; 2
    14fe:	31 05       	cpc	r19, r1
    1500:	34 f5       	brge	.+76     	; 0x154e <Dio_vidSetPinVal+0x34c>
    1502:	8d 85       	ldd	r24, Y+13	; 0x0d
    1504:	9e 85       	ldd	r25, Y+14	; 0x0e
    1506:	00 97       	sbiw	r24, 0x00	; 0
    1508:	b1 f0       	breq	.+44     	; 0x1536 <Dio_vidSetPinVal+0x334>
    150a:	d8 c1       	rjmp	.+944    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
    150c:	2d 85       	ldd	r18, Y+13	; 0x0d
    150e:	3e 85       	ldd	r19, Y+14	; 0x0e
    1510:	25 30       	cpi	r18, 0x05	; 5
    1512:	31 05       	cpc	r19, r1
    1514:	71 f1       	breq	.+92     	; 0x1572 <Dio_vidSetPinVal+0x370>
    1516:	8d 85       	ldd	r24, Y+13	; 0x0d
    1518:	9e 85       	ldd	r25, Y+14	; 0x0e
    151a:	85 30       	cpi	r24, 0x05	; 5
    151c:	91 05       	cpc	r25, r1
    151e:	1c f1       	brlt	.+70     	; 0x1566 <Dio_vidSetPinVal+0x364>
    1520:	2d 85       	ldd	r18, Y+13	; 0x0d
    1522:	3e 85       	ldd	r19, Y+14	; 0x0e
    1524:	26 30       	cpi	r18, 0x06	; 6
    1526:	31 05       	cpc	r19, r1
    1528:	51 f1       	breq	.+84     	; 0x157e <Dio_vidSetPinVal+0x37c>
    152a:	8d 85       	ldd	r24, Y+13	; 0x0d
    152c:	9e 85       	ldd	r25, Y+14	; 0x0e
    152e:	87 30       	cpi	r24, 0x07	; 7
    1530:	91 05       	cpc	r25, r1
    1532:	59 f1       	breq	.+86     	; 0x158a <Dio_vidSetPinVal+0x388>
    1534:	c3 c1       	rjmp	.+902    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
				{
					case 0:
						PORTB.Bits.Pin0 =0;
    1536:	e8 e3       	ldi	r30, 0x38	; 56
    1538:	f0 e0       	ldi	r31, 0x00	; 0
    153a:	80 81       	ld	r24, Z
    153c:	8e 7f       	andi	r24, 0xFE	; 254
    153e:	80 83       	st	Z, r24
    1540:	bd c1       	rjmp	.+890    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 1:
						PORTB.Bits.Pin1 =0;
    1542:	e8 e3       	ldi	r30, 0x38	; 56
    1544:	f0 e0       	ldi	r31, 0x00	; 0
    1546:	80 81       	ld	r24, Z
    1548:	8d 7f       	andi	r24, 0xFD	; 253
    154a:	80 83       	st	Z, r24
    154c:	b7 c1       	rjmp	.+878    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 2:
						PORTB.Bits.Pin2 =0;
    154e:	e8 e3       	ldi	r30, 0x38	; 56
    1550:	f0 e0       	ldi	r31, 0x00	; 0
    1552:	80 81       	ld	r24, Z
    1554:	8b 7f       	andi	r24, 0xFB	; 251
    1556:	80 83       	st	Z, r24
    1558:	b1 c1       	rjmp	.+866    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 3:
						PORTB.Bits.Pin3 =0;
    155a:	e8 e3       	ldi	r30, 0x38	; 56
    155c:	f0 e0       	ldi	r31, 0x00	; 0
    155e:	80 81       	ld	r24, Z
    1560:	87 7f       	andi	r24, 0xF7	; 247
    1562:	80 83       	st	Z, r24
    1564:	ab c1       	rjmp	.+854    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 4:
						PORTB.Bits.Pin4 =0;
    1566:	e8 e3       	ldi	r30, 0x38	; 56
    1568:	f0 e0       	ldi	r31, 0x00	; 0
    156a:	80 81       	ld	r24, Z
    156c:	8f 7e       	andi	r24, 0xEF	; 239
    156e:	80 83       	st	Z, r24
    1570:	a5 c1       	rjmp	.+842    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 5:
						PORTB.Bits.Pin5 =0;
    1572:	e8 e3       	ldi	r30, 0x38	; 56
    1574:	f0 e0       	ldi	r31, 0x00	; 0
    1576:	80 81       	ld	r24, Z
    1578:	8f 7d       	andi	r24, 0xDF	; 223
    157a:	80 83       	st	Z, r24
    157c:	9f c1       	rjmp	.+830    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 6:
						PORTB.Bits.Pin6 =0;
    157e:	e8 e3       	ldi	r30, 0x38	; 56
    1580:	f0 e0       	ldi	r31, 0x00	; 0
    1582:	80 81       	ld	r24, Z
    1584:	8f 7b       	andi	r24, 0xBF	; 191
    1586:	80 83       	st	Z, r24
    1588:	99 c1       	rjmp	.+818    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 7:
						PORTB.Bits.Pin7 =0;
    158a:	e8 e3       	ldi	r30, 0x38	; 56
    158c:	f0 e0       	ldi	r31, 0x00	; 0
    158e:	80 81       	ld	r24, Z
    1590:	8f 77       	andi	r24, 0x7F	; 127
    1592:	80 83       	st	Z, r24
    1594:	93 c1       	rjmp	.+806    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
				}
			}
			break;

		case 2:
			if(Val ==1)
    1596:	8c 81       	ldd	r24, Y+4	; 0x04
    1598:	81 30       	cpi	r24, 0x01	; 1
    159a:	09 f0       	breq	.+2      	; 0x159e <Dio_vidSetPinVal+0x39c>
    159c:	63 c0       	rjmp	.+198    	; 0x1664 <Dio_vidSetPinVal+0x462>
				{
					switch(PinLoc)
    159e:	89 81       	ldd	r24, Y+1	; 0x01
    15a0:	28 2f       	mov	r18, r24
    15a2:	30 e0       	ldi	r19, 0x00	; 0
    15a4:	3c 87       	std	Y+12, r19	; 0x0c
    15a6:	2b 87       	std	Y+11, r18	; 0x0b
    15a8:	8b 85       	ldd	r24, Y+11	; 0x0b
    15aa:	9c 85       	ldd	r25, Y+12	; 0x0c
    15ac:	83 30       	cpi	r24, 0x03	; 3
    15ae:	91 05       	cpc	r25, r1
    15b0:	d9 f1       	breq	.+118    	; 0x1628 <Dio_vidSetPinVal+0x426>
    15b2:	2b 85       	ldd	r18, Y+11	; 0x0b
    15b4:	3c 85       	ldd	r19, Y+12	; 0x0c
    15b6:	24 30       	cpi	r18, 0x04	; 4
    15b8:	31 05       	cpc	r19, r1
    15ba:	7c f4       	brge	.+30     	; 0x15da <Dio_vidSetPinVal+0x3d8>
    15bc:	8b 85       	ldd	r24, Y+11	; 0x0b
    15be:	9c 85       	ldd	r25, Y+12	; 0x0c
    15c0:	81 30       	cpi	r24, 0x01	; 1
    15c2:	91 05       	cpc	r25, r1
    15c4:	29 f1       	breq	.+74     	; 0x1610 <Dio_vidSetPinVal+0x40e>
    15c6:	2b 85       	ldd	r18, Y+11	; 0x0b
    15c8:	3c 85       	ldd	r19, Y+12	; 0x0c
    15ca:	22 30       	cpi	r18, 0x02	; 2
    15cc:	31 05       	cpc	r19, r1
    15ce:	34 f5       	brge	.+76     	; 0x161c <Dio_vidSetPinVal+0x41a>
    15d0:	8b 85       	ldd	r24, Y+11	; 0x0b
    15d2:	9c 85       	ldd	r25, Y+12	; 0x0c
    15d4:	00 97       	sbiw	r24, 0x00	; 0
    15d6:	b1 f0       	breq	.+44     	; 0x1604 <Dio_vidSetPinVal+0x402>
    15d8:	71 c1       	rjmp	.+738    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
    15da:	2b 85       	ldd	r18, Y+11	; 0x0b
    15dc:	3c 85       	ldd	r19, Y+12	; 0x0c
    15de:	25 30       	cpi	r18, 0x05	; 5
    15e0:	31 05       	cpc	r19, r1
    15e2:	71 f1       	breq	.+92     	; 0x1640 <Dio_vidSetPinVal+0x43e>
    15e4:	8b 85       	ldd	r24, Y+11	; 0x0b
    15e6:	9c 85       	ldd	r25, Y+12	; 0x0c
    15e8:	85 30       	cpi	r24, 0x05	; 5
    15ea:	91 05       	cpc	r25, r1
    15ec:	1c f1       	brlt	.+70     	; 0x1634 <Dio_vidSetPinVal+0x432>
    15ee:	2b 85       	ldd	r18, Y+11	; 0x0b
    15f0:	3c 85       	ldd	r19, Y+12	; 0x0c
    15f2:	26 30       	cpi	r18, 0x06	; 6
    15f4:	31 05       	cpc	r19, r1
    15f6:	51 f1       	breq	.+84     	; 0x164c <Dio_vidSetPinVal+0x44a>
    15f8:	8b 85       	ldd	r24, Y+11	; 0x0b
    15fa:	9c 85       	ldd	r25, Y+12	; 0x0c
    15fc:	87 30       	cpi	r24, 0x07	; 7
    15fe:	91 05       	cpc	r25, r1
    1600:	59 f1       	breq	.+86     	; 0x1658 <Dio_vidSetPinVal+0x456>
    1602:	5c c1       	rjmp	.+696    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					{
						case 0:
							PORTC.Bits.Pin0 =1;
    1604:	e5 e3       	ldi	r30, 0x35	; 53
    1606:	f0 e0       	ldi	r31, 0x00	; 0
    1608:	80 81       	ld	r24, Z
    160a:	81 60       	ori	r24, 0x01	; 1
    160c:	80 83       	st	Z, r24
    160e:	56 c1       	rjmp	.+684    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 1:
							PORTC.Bits.Pin1 =1;
    1610:	e5 e3       	ldi	r30, 0x35	; 53
    1612:	f0 e0       	ldi	r31, 0x00	; 0
    1614:	80 81       	ld	r24, Z
    1616:	82 60       	ori	r24, 0x02	; 2
    1618:	80 83       	st	Z, r24
    161a:	50 c1       	rjmp	.+672    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 2:
							PORTC.Bits.Pin2 =1;
    161c:	e5 e3       	ldi	r30, 0x35	; 53
    161e:	f0 e0       	ldi	r31, 0x00	; 0
    1620:	80 81       	ld	r24, Z
    1622:	84 60       	ori	r24, 0x04	; 4
    1624:	80 83       	st	Z, r24
    1626:	4a c1       	rjmp	.+660    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 3:
							PORTC.Bits.Pin3 =1;
    1628:	e5 e3       	ldi	r30, 0x35	; 53
    162a:	f0 e0       	ldi	r31, 0x00	; 0
    162c:	80 81       	ld	r24, Z
    162e:	88 60       	ori	r24, 0x08	; 8
    1630:	80 83       	st	Z, r24
    1632:	44 c1       	rjmp	.+648    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 4:
							PORTC.Bits.Pin4 =1;
    1634:	e5 e3       	ldi	r30, 0x35	; 53
    1636:	f0 e0       	ldi	r31, 0x00	; 0
    1638:	80 81       	ld	r24, Z
    163a:	80 61       	ori	r24, 0x10	; 16
    163c:	80 83       	st	Z, r24
    163e:	3e c1       	rjmp	.+636    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 5:
							PORTC.Bits.Pin5 =1;
    1640:	e5 e3       	ldi	r30, 0x35	; 53
    1642:	f0 e0       	ldi	r31, 0x00	; 0
    1644:	80 81       	ld	r24, Z
    1646:	80 62       	ori	r24, 0x20	; 32
    1648:	80 83       	st	Z, r24
    164a:	38 c1       	rjmp	.+624    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 6:
							PORTC.Bits.Pin6 =1;
    164c:	e5 e3       	ldi	r30, 0x35	; 53
    164e:	f0 e0       	ldi	r31, 0x00	; 0
    1650:	80 81       	ld	r24, Z
    1652:	80 64       	ori	r24, 0x40	; 64
    1654:	80 83       	st	Z, r24
    1656:	32 c1       	rjmp	.+612    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 7:
							PORTC.Bits.Pin7 =1;
    1658:	e5 e3       	ldi	r30, 0x35	; 53
    165a:	f0 e0       	ldi	r31, 0x00	; 0
    165c:	80 81       	ld	r24, Z
    165e:	80 68       	ori	r24, 0x80	; 128
    1660:	80 83       	st	Z, r24
    1662:	2c c1       	rjmp	.+600    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;
					}
				}
			else
			{
				switch(PinLoc)
    1664:	89 81       	ldd	r24, Y+1	; 0x01
    1666:	28 2f       	mov	r18, r24
    1668:	30 e0       	ldi	r19, 0x00	; 0
    166a:	3a 87       	std	Y+10, r19	; 0x0a
    166c:	29 87       	std	Y+9, r18	; 0x09
    166e:	89 85       	ldd	r24, Y+9	; 0x09
    1670:	9a 85       	ldd	r25, Y+10	; 0x0a
    1672:	83 30       	cpi	r24, 0x03	; 3
    1674:	91 05       	cpc	r25, r1
    1676:	d9 f1       	breq	.+118    	; 0x16ee <Dio_vidSetPinVal+0x4ec>
    1678:	29 85       	ldd	r18, Y+9	; 0x09
    167a:	3a 85       	ldd	r19, Y+10	; 0x0a
    167c:	24 30       	cpi	r18, 0x04	; 4
    167e:	31 05       	cpc	r19, r1
    1680:	7c f4       	brge	.+30     	; 0x16a0 <Dio_vidSetPinVal+0x49e>
    1682:	89 85       	ldd	r24, Y+9	; 0x09
    1684:	9a 85       	ldd	r25, Y+10	; 0x0a
    1686:	81 30       	cpi	r24, 0x01	; 1
    1688:	91 05       	cpc	r25, r1
    168a:	29 f1       	breq	.+74     	; 0x16d6 <Dio_vidSetPinVal+0x4d4>
    168c:	29 85       	ldd	r18, Y+9	; 0x09
    168e:	3a 85       	ldd	r19, Y+10	; 0x0a
    1690:	22 30       	cpi	r18, 0x02	; 2
    1692:	31 05       	cpc	r19, r1
    1694:	34 f5       	brge	.+76     	; 0x16e2 <Dio_vidSetPinVal+0x4e0>
    1696:	89 85       	ldd	r24, Y+9	; 0x09
    1698:	9a 85       	ldd	r25, Y+10	; 0x0a
    169a:	00 97       	sbiw	r24, 0x00	; 0
    169c:	b1 f0       	breq	.+44     	; 0x16ca <Dio_vidSetPinVal+0x4c8>
    169e:	0e c1       	rjmp	.+540    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
    16a0:	29 85       	ldd	r18, Y+9	; 0x09
    16a2:	3a 85       	ldd	r19, Y+10	; 0x0a
    16a4:	25 30       	cpi	r18, 0x05	; 5
    16a6:	31 05       	cpc	r19, r1
    16a8:	71 f1       	breq	.+92     	; 0x1706 <Dio_vidSetPinVal+0x504>
    16aa:	89 85       	ldd	r24, Y+9	; 0x09
    16ac:	9a 85       	ldd	r25, Y+10	; 0x0a
    16ae:	85 30       	cpi	r24, 0x05	; 5
    16b0:	91 05       	cpc	r25, r1
    16b2:	1c f1       	brlt	.+70     	; 0x16fa <Dio_vidSetPinVal+0x4f8>
    16b4:	29 85       	ldd	r18, Y+9	; 0x09
    16b6:	3a 85       	ldd	r19, Y+10	; 0x0a
    16b8:	26 30       	cpi	r18, 0x06	; 6
    16ba:	31 05       	cpc	r19, r1
    16bc:	51 f1       	breq	.+84     	; 0x1712 <Dio_vidSetPinVal+0x510>
    16be:	89 85       	ldd	r24, Y+9	; 0x09
    16c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    16c2:	87 30       	cpi	r24, 0x07	; 7
    16c4:	91 05       	cpc	r25, r1
    16c6:	59 f1       	breq	.+86     	; 0x171e <Dio_vidSetPinVal+0x51c>
    16c8:	f9 c0       	rjmp	.+498    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
				{
					case 0:
						PORTC.Bits.Pin0 =0;
    16ca:	e5 e3       	ldi	r30, 0x35	; 53
    16cc:	f0 e0       	ldi	r31, 0x00	; 0
    16ce:	80 81       	ld	r24, Z
    16d0:	8e 7f       	andi	r24, 0xFE	; 254
    16d2:	80 83       	st	Z, r24
    16d4:	f3 c0       	rjmp	.+486    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 1:
						PORTC.Bits.Pin1 =0;
    16d6:	e5 e3       	ldi	r30, 0x35	; 53
    16d8:	f0 e0       	ldi	r31, 0x00	; 0
    16da:	80 81       	ld	r24, Z
    16dc:	8d 7f       	andi	r24, 0xFD	; 253
    16de:	80 83       	st	Z, r24
    16e0:	ed c0       	rjmp	.+474    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 2:
						PORTC.Bits.Pin2 =0;
    16e2:	e5 e3       	ldi	r30, 0x35	; 53
    16e4:	f0 e0       	ldi	r31, 0x00	; 0
    16e6:	80 81       	ld	r24, Z
    16e8:	8b 7f       	andi	r24, 0xFB	; 251
    16ea:	80 83       	st	Z, r24
    16ec:	e7 c0       	rjmp	.+462    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 3:
						PORTC.Bits.Pin3 =0;
    16ee:	e5 e3       	ldi	r30, 0x35	; 53
    16f0:	f0 e0       	ldi	r31, 0x00	; 0
    16f2:	80 81       	ld	r24, Z
    16f4:	87 7f       	andi	r24, 0xF7	; 247
    16f6:	80 83       	st	Z, r24
    16f8:	e1 c0       	rjmp	.+450    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 4:
						PORTC.Bits.Pin4 =0;
    16fa:	e5 e3       	ldi	r30, 0x35	; 53
    16fc:	f0 e0       	ldi	r31, 0x00	; 0
    16fe:	80 81       	ld	r24, Z
    1700:	8f 7e       	andi	r24, 0xEF	; 239
    1702:	80 83       	st	Z, r24
    1704:	db c0       	rjmp	.+438    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 5:
						PORTC.Bits.Pin5 =0;
    1706:	e5 e3       	ldi	r30, 0x35	; 53
    1708:	f0 e0       	ldi	r31, 0x00	; 0
    170a:	80 81       	ld	r24, Z
    170c:	8f 7d       	andi	r24, 0xDF	; 223
    170e:	80 83       	st	Z, r24
    1710:	d5 c0       	rjmp	.+426    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 6:
						PORTC.Bits.Pin6 =0;
    1712:	e5 e3       	ldi	r30, 0x35	; 53
    1714:	f0 e0       	ldi	r31, 0x00	; 0
    1716:	80 81       	ld	r24, Z
    1718:	8f 7b       	andi	r24, 0xBF	; 191
    171a:	80 83       	st	Z, r24
    171c:	cf c0       	rjmp	.+414    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 7:
						PORTC.Bits.Pin7 =0;
    171e:	e5 e3       	ldi	r30, 0x35	; 53
    1720:	f0 e0       	ldi	r31, 0x00	; 0
    1722:	80 81       	ld	r24, Z
    1724:	8f 77       	andi	r24, 0x7F	; 127
    1726:	80 83       	st	Z, r24
    1728:	c9 c0       	rjmp	.+402    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
			}
		break;


		case 3:
			if(Val ==1)
    172a:	8c 81       	ldd	r24, Y+4	; 0x04
    172c:	81 30       	cpi	r24, 0x01	; 1
    172e:	09 f0       	breq	.+2      	; 0x1732 <Dio_vidSetPinVal+0x530>
    1730:	63 c0       	rjmp	.+198    	; 0x17f8 <Dio_vidSetPinVal+0x5f6>
				{
					switch(PinLoc)
    1732:	89 81       	ldd	r24, Y+1	; 0x01
    1734:	28 2f       	mov	r18, r24
    1736:	30 e0       	ldi	r19, 0x00	; 0
    1738:	38 87       	std	Y+8, r19	; 0x08
    173a:	2f 83       	std	Y+7, r18	; 0x07
    173c:	8f 81       	ldd	r24, Y+7	; 0x07
    173e:	98 85       	ldd	r25, Y+8	; 0x08
    1740:	83 30       	cpi	r24, 0x03	; 3
    1742:	91 05       	cpc	r25, r1
    1744:	d9 f1       	breq	.+118    	; 0x17bc <Dio_vidSetPinVal+0x5ba>
    1746:	2f 81       	ldd	r18, Y+7	; 0x07
    1748:	38 85       	ldd	r19, Y+8	; 0x08
    174a:	24 30       	cpi	r18, 0x04	; 4
    174c:	31 05       	cpc	r19, r1
    174e:	7c f4       	brge	.+30     	; 0x176e <Dio_vidSetPinVal+0x56c>
    1750:	8f 81       	ldd	r24, Y+7	; 0x07
    1752:	98 85       	ldd	r25, Y+8	; 0x08
    1754:	81 30       	cpi	r24, 0x01	; 1
    1756:	91 05       	cpc	r25, r1
    1758:	29 f1       	breq	.+74     	; 0x17a4 <Dio_vidSetPinVal+0x5a2>
    175a:	2f 81       	ldd	r18, Y+7	; 0x07
    175c:	38 85       	ldd	r19, Y+8	; 0x08
    175e:	22 30       	cpi	r18, 0x02	; 2
    1760:	31 05       	cpc	r19, r1
    1762:	34 f5       	brge	.+76     	; 0x17b0 <Dio_vidSetPinVal+0x5ae>
    1764:	8f 81       	ldd	r24, Y+7	; 0x07
    1766:	98 85       	ldd	r25, Y+8	; 0x08
    1768:	00 97       	sbiw	r24, 0x00	; 0
    176a:	b1 f0       	breq	.+44     	; 0x1798 <Dio_vidSetPinVal+0x596>
    176c:	a7 c0       	rjmp	.+334    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
    176e:	2f 81       	ldd	r18, Y+7	; 0x07
    1770:	38 85       	ldd	r19, Y+8	; 0x08
    1772:	25 30       	cpi	r18, 0x05	; 5
    1774:	31 05       	cpc	r19, r1
    1776:	71 f1       	breq	.+92     	; 0x17d4 <Dio_vidSetPinVal+0x5d2>
    1778:	8f 81       	ldd	r24, Y+7	; 0x07
    177a:	98 85       	ldd	r25, Y+8	; 0x08
    177c:	85 30       	cpi	r24, 0x05	; 5
    177e:	91 05       	cpc	r25, r1
    1780:	1c f1       	brlt	.+70     	; 0x17c8 <Dio_vidSetPinVal+0x5c6>
    1782:	2f 81       	ldd	r18, Y+7	; 0x07
    1784:	38 85       	ldd	r19, Y+8	; 0x08
    1786:	26 30       	cpi	r18, 0x06	; 6
    1788:	31 05       	cpc	r19, r1
    178a:	51 f1       	breq	.+84     	; 0x17e0 <Dio_vidSetPinVal+0x5de>
    178c:	8f 81       	ldd	r24, Y+7	; 0x07
    178e:	98 85       	ldd	r25, Y+8	; 0x08
    1790:	87 30       	cpi	r24, 0x07	; 7
    1792:	91 05       	cpc	r25, r1
    1794:	59 f1       	breq	.+86     	; 0x17ec <Dio_vidSetPinVal+0x5ea>
    1796:	92 c0       	rjmp	.+292    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					{
						case 0:
							PORTD.Bits.Pin0 =1;
    1798:	e2 e3       	ldi	r30, 0x32	; 50
    179a:	f0 e0       	ldi	r31, 0x00	; 0
    179c:	80 81       	ld	r24, Z
    179e:	81 60       	ori	r24, 0x01	; 1
    17a0:	80 83       	st	Z, r24
    17a2:	8c c0       	rjmp	.+280    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 1:
							PORTD.Bits.Pin1 =1;
    17a4:	e2 e3       	ldi	r30, 0x32	; 50
    17a6:	f0 e0       	ldi	r31, 0x00	; 0
    17a8:	80 81       	ld	r24, Z
    17aa:	82 60       	ori	r24, 0x02	; 2
    17ac:	80 83       	st	Z, r24
    17ae:	86 c0       	rjmp	.+268    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 2:
							PORTD.Bits.Pin2 =1;
    17b0:	e2 e3       	ldi	r30, 0x32	; 50
    17b2:	f0 e0       	ldi	r31, 0x00	; 0
    17b4:	80 81       	ld	r24, Z
    17b6:	84 60       	ori	r24, 0x04	; 4
    17b8:	80 83       	st	Z, r24
    17ba:	80 c0       	rjmp	.+256    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 3:
							PORTD.Bits.Pin3 =1;
    17bc:	e2 e3       	ldi	r30, 0x32	; 50
    17be:	f0 e0       	ldi	r31, 0x00	; 0
    17c0:	80 81       	ld	r24, Z
    17c2:	88 60       	ori	r24, 0x08	; 8
    17c4:	80 83       	st	Z, r24
    17c6:	7a c0       	rjmp	.+244    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 4:
							PORTD.Bits.Pin4 =1;
    17c8:	e2 e3       	ldi	r30, 0x32	; 50
    17ca:	f0 e0       	ldi	r31, 0x00	; 0
    17cc:	80 81       	ld	r24, Z
    17ce:	80 61       	ori	r24, 0x10	; 16
    17d0:	80 83       	st	Z, r24
    17d2:	74 c0       	rjmp	.+232    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 5:
							PORTD.Bits.Pin5 =1;
    17d4:	e2 e3       	ldi	r30, 0x32	; 50
    17d6:	f0 e0       	ldi	r31, 0x00	; 0
    17d8:	80 81       	ld	r24, Z
    17da:	80 62       	ori	r24, 0x20	; 32
    17dc:	80 83       	st	Z, r24
    17de:	6e c0       	rjmp	.+220    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 6:
							PORTD.Bits.Pin6 =1;
    17e0:	e2 e3       	ldi	r30, 0x32	; 50
    17e2:	f0 e0       	ldi	r31, 0x00	; 0
    17e4:	80 81       	ld	r24, Z
    17e6:	80 64       	ori	r24, 0x40	; 64
    17e8:	80 83       	st	Z, r24
    17ea:	68 c0       	rjmp	.+208    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;

						case 7:
							PORTD.Bits.Pin7 =1;
    17ec:	e2 e3       	ldi	r30, 0x32	; 50
    17ee:	f0 e0       	ldi	r31, 0x00	; 0
    17f0:	80 81       	ld	r24, Z
    17f2:	80 68       	ori	r24, 0x80	; 128
    17f4:	80 83       	st	Z, r24
    17f6:	62 c0       	rjmp	.+196    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
						break;
					}
				}
			else
			{
				switch(PinLoc)
    17f8:	89 81       	ldd	r24, Y+1	; 0x01
    17fa:	28 2f       	mov	r18, r24
    17fc:	30 e0       	ldi	r19, 0x00	; 0
    17fe:	3e 83       	std	Y+6, r19	; 0x06
    1800:	2d 83       	std	Y+5, r18	; 0x05
    1802:	8d 81       	ldd	r24, Y+5	; 0x05
    1804:	9e 81       	ldd	r25, Y+6	; 0x06
    1806:	83 30       	cpi	r24, 0x03	; 3
    1808:	91 05       	cpc	r25, r1
    180a:	d9 f1       	breq	.+118    	; 0x1882 <Dio_vidSetPinVal+0x680>
    180c:	2d 81       	ldd	r18, Y+5	; 0x05
    180e:	3e 81       	ldd	r19, Y+6	; 0x06
    1810:	24 30       	cpi	r18, 0x04	; 4
    1812:	31 05       	cpc	r19, r1
    1814:	7c f4       	brge	.+30     	; 0x1834 <Dio_vidSetPinVal+0x632>
    1816:	8d 81       	ldd	r24, Y+5	; 0x05
    1818:	9e 81       	ldd	r25, Y+6	; 0x06
    181a:	81 30       	cpi	r24, 0x01	; 1
    181c:	91 05       	cpc	r25, r1
    181e:	29 f1       	breq	.+74     	; 0x186a <Dio_vidSetPinVal+0x668>
    1820:	2d 81       	ldd	r18, Y+5	; 0x05
    1822:	3e 81       	ldd	r19, Y+6	; 0x06
    1824:	22 30       	cpi	r18, 0x02	; 2
    1826:	31 05       	cpc	r19, r1
    1828:	34 f5       	brge	.+76     	; 0x1876 <Dio_vidSetPinVal+0x674>
    182a:	8d 81       	ldd	r24, Y+5	; 0x05
    182c:	9e 81       	ldd	r25, Y+6	; 0x06
    182e:	00 97       	sbiw	r24, 0x00	; 0
    1830:	b1 f0       	breq	.+44     	; 0x185e <Dio_vidSetPinVal+0x65c>
    1832:	44 c0       	rjmp	.+136    	; 0x18bc <Dio_vidSetPinVal+0x6ba>
    1834:	2d 81       	ldd	r18, Y+5	; 0x05
    1836:	3e 81       	ldd	r19, Y+6	; 0x06
    1838:	25 30       	cpi	r18, 0x05	; 5
    183a:	31 05       	cpc	r19, r1
    183c:	71 f1       	breq	.+92     	; 0x189a <Dio_vidSetPinVal+0x698>
    183e:	8d 81       	ldd	r24, Y+5	; 0x05
    1840:	9e 81       	ldd	r25, Y+6	; 0x06
    1842:	85 30       	cpi	r24, 0x05	; 5
    1844:	91 05       	cpc	r25, r1
    1846:	1c f1       	brlt	.+70     	; 0x188e <Dio_vidSetPinVal+0x68c>
    1848:	2d 81       	ldd	r18, Y+5	; 0x05
    184a:	3e 81       	ldd	r19, Y+6	; 0x06
    184c:	26 30       	cpi	r18, 0x06	; 6
    184e:	31 05       	cpc	r19, r1
    1850:	51 f1       	breq	.+84     	; 0x18a6 <Dio_vidSetPinVal+0x6a4>
    1852:	8d 81       	ldd	r24, Y+5	; 0x05
    1854:	9e 81       	ldd	r25, Y+6	; 0x06
    1856:	87 30       	cpi	r24, 0x07	; 7
    1858:	91 05       	cpc	r25, r1
    185a:	59 f1       	breq	.+86     	; 0x18b2 <Dio_vidSetPinVal+0x6b0>
    185c:	2f c0       	rjmp	.+94     	; 0x18bc <Dio_vidSetPinVal+0x6ba>
				{
					case 0:
						PORTD.Bits.Pin0 =0;
    185e:	e2 e3       	ldi	r30, 0x32	; 50
    1860:	f0 e0       	ldi	r31, 0x00	; 0
    1862:	80 81       	ld	r24, Z
    1864:	8e 7f       	andi	r24, 0xFE	; 254
    1866:	80 83       	st	Z, r24
    1868:	29 c0       	rjmp	.+82     	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 1:
						PORTD.Bits.Pin1 =0;
    186a:	e2 e3       	ldi	r30, 0x32	; 50
    186c:	f0 e0       	ldi	r31, 0x00	; 0
    186e:	80 81       	ld	r24, Z
    1870:	8d 7f       	andi	r24, 0xFD	; 253
    1872:	80 83       	st	Z, r24
    1874:	23 c0       	rjmp	.+70     	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 2:
						PORTD.Bits.Pin2 =0;
    1876:	e2 e3       	ldi	r30, 0x32	; 50
    1878:	f0 e0       	ldi	r31, 0x00	; 0
    187a:	80 81       	ld	r24, Z
    187c:	8b 7f       	andi	r24, 0xFB	; 251
    187e:	80 83       	st	Z, r24
    1880:	1d c0       	rjmp	.+58     	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 3:
						PORTD.Bits.Pin3 =0;
    1882:	e2 e3       	ldi	r30, 0x32	; 50
    1884:	f0 e0       	ldi	r31, 0x00	; 0
    1886:	80 81       	ld	r24, Z
    1888:	87 7f       	andi	r24, 0xF7	; 247
    188a:	80 83       	st	Z, r24
    188c:	17 c0       	rjmp	.+46     	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 4:
						PORTD.Bits.Pin4 =0;
    188e:	e2 e3       	ldi	r30, 0x32	; 50
    1890:	f0 e0       	ldi	r31, 0x00	; 0
    1892:	80 81       	ld	r24, Z
    1894:	8f 7e       	andi	r24, 0xEF	; 239
    1896:	80 83       	st	Z, r24
    1898:	11 c0       	rjmp	.+34     	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 5:
						PORTD.Bits.Pin5 =0;
    189a:	e2 e3       	ldi	r30, 0x32	; 50
    189c:	f0 e0       	ldi	r31, 0x00	; 0
    189e:	80 81       	ld	r24, Z
    18a0:	8f 7d       	andi	r24, 0xDF	; 223
    18a2:	80 83       	st	Z, r24
    18a4:	0b c0       	rjmp	.+22     	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 6:
						PORTD.Bits.Pin6 =0;
    18a6:	e2 e3       	ldi	r30, 0x32	; 50
    18a8:	f0 e0       	ldi	r31, 0x00	; 0
    18aa:	80 81       	ld	r24, Z
    18ac:	8f 7b       	andi	r24, 0xBF	; 191
    18ae:	80 83       	st	Z, r24
    18b0:	05 c0       	rjmp	.+10     	; 0x18bc <Dio_vidSetPinVal+0x6ba>
					break;

					case 7:
						PORTD.Bits.Pin7 =0;
    18b2:	e2 e3       	ldi	r30, 0x32	; 50
    18b4:	f0 e0       	ldi	r31, 0x00	; 0
    18b6:	80 81       	ld	r24, Z
    18b8:	8f 77       	andi	r24, 0x7F	; 127
    18ba:	80 83       	st	Z, r24
					break;
				}
			}
		break;
	}
}
    18bc:	66 96       	adiw	r28, 0x16	; 22
    18be:	0f b6       	in	r0, 0x3f	; 63
    18c0:	f8 94       	cli
    18c2:	de bf       	out	0x3e, r29	; 62
    18c4:	0f be       	out	0x3f, r0	; 63
    18c6:	cd bf       	out	0x3d, r28	; 61
    18c8:	cf 91       	pop	r28
    18ca:	df 91       	pop	r29
    18cc:	08 95       	ret

000018ce <Lcd_vidSendCommand>:
#include <util/delay.h>
#include "Lcd_int.h"
#include "Dio_int.h"
#include "Lcd_cfg.h"
void Lcd_vidSendCommand(u8 Cmd)
{
    18ce:	df 93       	push	r29
    18d0:	cf 93       	push	r28
    18d2:	cd b7       	in	r28, 0x3d	; 61
    18d4:	de b7       	in	r29, 0x3e	; 62
    18d6:	2f 97       	sbiw	r28, 0x0f	; 15
    18d8:	0f b6       	in	r0, 0x3f	; 63
    18da:	f8 94       	cli
    18dc:	de bf       	out	0x3e, r29	; 62
    18de:	0f be       	out	0x3f, r0	; 63
    18e0:	cd bf       	out	0x3d, r28	; 61
    18e2:	8f 87       	std	Y+15, r24	; 0x0f
	//Start to change in LCD control Reg to indicate it that you will receive command
	Dio_vidSetPinVal(LCD_u8RS_PIN , DIO_u8LOW);  //make RS->0 to indicate LCD "you will receive command not data"
    18e4:	80 e0       	ldi	r24, 0x00	; 0
    18e6:	60 e0       	ldi	r22, 0x00	; 0
    18e8:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8RW_PIN , DIO_u8LOW);  //make RW->0 to indicate LCD "you will write in command Register"
    18ec:	81 e0       	ldi	r24, 0x01	; 1
    18ee:	60 e0       	ldi	r22, 0x00	; 0
    18f0:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8EN_PIN , DIO_u8HIGH); //make EN->1 to indicate LCD "Please LCD don't save any thing in your buffer until be sure all data sent "
    18f4:	82 e0       	ldi	r24, 0x02	; 2
    18f6:	61 e0       	ldi	r22, 0x01	; 1
    18f8:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>

	//In prof_code we can't send all data '8_bit'  for PORT at the same time so we use GET_BIT
	Dio_vidSetPinVal(LCD_u8D0_PIN , GET_BIT(Cmd,0));
    18fc:	8f 85       	ldd	r24, Y+15	; 0x0f
    18fe:	98 2f       	mov	r25, r24
    1900:	91 70       	andi	r25, 0x01	; 1
    1902:	88 e1       	ldi	r24, 0x18	; 24
    1904:	69 2f       	mov	r22, r25
    1906:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D1_PIN , GET_BIT(Cmd,1));
    190a:	8f 85       	ldd	r24, Y+15	; 0x0f
    190c:	86 95       	lsr	r24
    190e:	98 2f       	mov	r25, r24
    1910:	91 70       	andi	r25, 0x01	; 1
    1912:	89 e1       	ldi	r24, 0x19	; 25
    1914:	69 2f       	mov	r22, r25
    1916:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D2_PIN , GET_BIT(Cmd,2));
    191a:	8f 85       	ldd	r24, Y+15	; 0x0f
    191c:	86 95       	lsr	r24
    191e:	86 95       	lsr	r24
    1920:	98 2f       	mov	r25, r24
    1922:	91 70       	andi	r25, 0x01	; 1
    1924:	8a e1       	ldi	r24, 0x1A	; 26
    1926:	69 2f       	mov	r22, r25
    1928:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D3_PIN , GET_BIT(Cmd,3));
    192c:	8f 85       	ldd	r24, Y+15	; 0x0f
    192e:	86 95       	lsr	r24
    1930:	86 95       	lsr	r24
    1932:	86 95       	lsr	r24
    1934:	98 2f       	mov	r25, r24
    1936:	91 70       	andi	r25, 0x01	; 1
    1938:	8b e1       	ldi	r24, 0x1B	; 27
    193a:	69 2f       	mov	r22, r25
    193c:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D4_PIN , GET_BIT(Cmd,4));
    1940:	8f 85       	ldd	r24, Y+15	; 0x0f
    1942:	82 95       	swap	r24
    1944:	8f 70       	andi	r24, 0x0F	; 15
    1946:	98 2f       	mov	r25, r24
    1948:	91 70       	andi	r25, 0x01	; 1
    194a:	8c e1       	ldi	r24, 0x1C	; 28
    194c:	69 2f       	mov	r22, r25
    194e:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D5_PIN , GET_BIT(Cmd,5));
    1952:	8f 85       	ldd	r24, Y+15	; 0x0f
    1954:	82 95       	swap	r24
    1956:	86 95       	lsr	r24
    1958:	87 70       	andi	r24, 0x07	; 7
    195a:	98 2f       	mov	r25, r24
    195c:	91 70       	andi	r25, 0x01	; 1
    195e:	8d e1       	ldi	r24, 0x1D	; 29
    1960:	69 2f       	mov	r22, r25
    1962:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D6_PIN , GET_BIT(Cmd,6));
    1966:	8f 85       	ldd	r24, Y+15	; 0x0f
    1968:	82 95       	swap	r24
    196a:	86 95       	lsr	r24
    196c:	86 95       	lsr	r24
    196e:	83 70       	andi	r24, 0x03	; 3
    1970:	98 2f       	mov	r25, r24
    1972:	91 70       	andi	r25, 0x01	; 1
    1974:	8e e1       	ldi	r24, 0x1E	; 30
    1976:	69 2f       	mov	r22, r25
    1978:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D7_PIN , GET_BIT(Cmd,7));
    197c:	8f 85       	ldd	r24, Y+15	; 0x0f
    197e:	98 2f       	mov	r25, r24
    1980:	99 1f       	adc	r25, r25
    1982:	99 27       	eor	r25, r25
    1984:	99 1f       	adc	r25, r25
    1986:	8f e1       	ldi	r24, 0x1F	; 31
    1988:	69 2f       	mov	r22, r25
    198a:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
    198e:	80 e0       	ldi	r24, 0x00	; 0
    1990:	90 e0       	ldi	r25, 0x00	; 0
    1992:	a0 e0       	ldi	r26, 0x00	; 0
    1994:	b0 e4       	ldi	r27, 0x40	; 64
    1996:	8b 87       	std	Y+11, r24	; 0x0b
    1998:	9c 87       	std	Y+12, r25	; 0x0c
    199a:	ad 87       	std	Y+13, r26	; 0x0d
    199c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    199e:	6b 85       	ldd	r22, Y+11	; 0x0b
    19a0:	7c 85       	ldd	r23, Y+12	; 0x0c
    19a2:	8d 85       	ldd	r24, Y+13	; 0x0d
    19a4:	9e 85       	ldd	r25, Y+14	; 0x0e
    19a6:	20 e0       	ldi	r18, 0x00	; 0
    19a8:	30 e0       	ldi	r19, 0x00	; 0
    19aa:	4a ef       	ldi	r20, 0xFA	; 250
    19ac:	54 e4       	ldi	r21, 0x44	; 68
    19ae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19b2:	dc 01       	movw	r26, r24
    19b4:	cb 01       	movw	r24, r22
    19b6:	8f 83       	std	Y+7, r24	; 0x07
    19b8:	98 87       	std	Y+8, r25	; 0x08
    19ba:	a9 87       	std	Y+9, r26	; 0x09
    19bc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    19be:	6f 81       	ldd	r22, Y+7	; 0x07
    19c0:	78 85       	ldd	r23, Y+8	; 0x08
    19c2:	89 85       	ldd	r24, Y+9	; 0x09
    19c4:	9a 85       	ldd	r25, Y+10	; 0x0a
    19c6:	20 e0       	ldi	r18, 0x00	; 0
    19c8:	30 e0       	ldi	r19, 0x00	; 0
    19ca:	40 e8       	ldi	r20, 0x80	; 128
    19cc:	5f e3       	ldi	r21, 0x3F	; 63
    19ce:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    19d2:	88 23       	and	r24, r24
    19d4:	2c f4       	brge	.+10     	; 0x19e0 <Lcd_vidSendCommand+0x112>
		__ticks = 1;
    19d6:	81 e0       	ldi	r24, 0x01	; 1
    19d8:	90 e0       	ldi	r25, 0x00	; 0
    19da:	9e 83       	std	Y+6, r25	; 0x06
    19dc:	8d 83       	std	Y+5, r24	; 0x05
    19de:	3f c0       	rjmp	.+126    	; 0x1a5e <Lcd_vidSendCommand+0x190>
	else if (__tmp > 65535)
    19e0:	6f 81       	ldd	r22, Y+7	; 0x07
    19e2:	78 85       	ldd	r23, Y+8	; 0x08
    19e4:	89 85       	ldd	r24, Y+9	; 0x09
    19e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    19e8:	20 e0       	ldi	r18, 0x00	; 0
    19ea:	3f ef       	ldi	r19, 0xFF	; 255
    19ec:	4f e7       	ldi	r20, 0x7F	; 127
    19ee:	57 e4       	ldi	r21, 0x47	; 71
    19f0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    19f4:	18 16       	cp	r1, r24
    19f6:	4c f5       	brge	.+82     	; 0x1a4a <Lcd_vidSendCommand+0x17c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19f8:	6b 85       	ldd	r22, Y+11	; 0x0b
    19fa:	7c 85       	ldd	r23, Y+12	; 0x0c
    19fc:	8d 85       	ldd	r24, Y+13	; 0x0d
    19fe:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a00:	20 e0       	ldi	r18, 0x00	; 0
    1a02:	30 e0       	ldi	r19, 0x00	; 0
    1a04:	40 e2       	ldi	r20, 0x20	; 32
    1a06:	51 e4       	ldi	r21, 0x41	; 65
    1a08:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a0c:	dc 01       	movw	r26, r24
    1a0e:	cb 01       	movw	r24, r22
    1a10:	bc 01       	movw	r22, r24
    1a12:	cd 01       	movw	r24, r26
    1a14:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a18:	dc 01       	movw	r26, r24
    1a1a:	cb 01       	movw	r24, r22
    1a1c:	9e 83       	std	Y+6, r25	; 0x06
    1a1e:	8d 83       	std	Y+5, r24	; 0x05
    1a20:	0f c0       	rjmp	.+30     	; 0x1a40 <Lcd_vidSendCommand+0x172>
    1a22:	88 ec       	ldi	r24, 0xC8	; 200
    1a24:	90 e0       	ldi	r25, 0x00	; 0
    1a26:	9c 83       	std	Y+4, r25	; 0x04
    1a28:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1a2a:	8b 81       	ldd	r24, Y+3	; 0x03
    1a2c:	9c 81       	ldd	r25, Y+4	; 0x04
    1a2e:	01 97       	sbiw	r24, 0x01	; 1
    1a30:	f1 f7       	brne	.-4      	; 0x1a2e <Lcd_vidSendCommand+0x160>
    1a32:	9c 83       	std	Y+4, r25	; 0x04
    1a34:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a36:	8d 81       	ldd	r24, Y+5	; 0x05
    1a38:	9e 81       	ldd	r25, Y+6	; 0x06
    1a3a:	01 97       	sbiw	r24, 0x01	; 1
    1a3c:	9e 83       	std	Y+6, r25	; 0x06
    1a3e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a40:	8d 81       	ldd	r24, Y+5	; 0x05
    1a42:	9e 81       	ldd	r25, Y+6	; 0x06
    1a44:	00 97       	sbiw	r24, 0x00	; 0
    1a46:	69 f7       	brne	.-38     	; 0x1a22 <Lcd_vidSendCommand+0x154>
    1a48:	14 c0       	rjmp	.+40     	; 0x1a72 <Lcd_vidSendCommand+0x1a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a4a:	6f 81       	ldd	r22, Y+7	; 0x07
    1a4c:	78 85       	ldd	r23, Y+8	; 0x08
    1a4e:	89 85       	ldd	r24, Y+9	; 0x09
    1a50:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a52:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a56:	dc 01       	movw	r26, r24
    1a58:	cb 01       	movw	r24, r22
    1a5a:	9e 83       	std	Y+6, r25	; 0x06
    1a5c:	8d 83       	std	Y+5, r24	; 0x05
    1a5e:	8d 81       	ldd	r24, Y+5	; 0x05
    1a60:	9e 81       	ldd	r25, Y+6	; 0x06
    1a62:	9a 83       	std	Y+2, r25	; 0x02
    1a64:	89 83       	std	Y+1, r24	; 0x01
    1a66:	89 81       	ldd	r24, Y+1	; 0x01
    1a68:	9a 81       	ldd	r25, Y+2	; 0x02
    1a6a:	01 97       	sbiw	r24, 0x01	; 1
    1a6c:	f1 f7       	brne	.-4      	; 0x1a6a <Lcd_vidSendCommand+0x19c>
    1a6e:	9a 83       	std	Y+2, r25	; 0x02
    1a70:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(2);

	Dio_vidSetPinVal(LCD_u8EN_PIN , DIO_u8LOW);  //make EN->0 to indicate LCD "NOW you can save bits in your buffer all data sent"
    1a72:	82 e0       	ldi	r24, 0x02	; 2
    1a74:	60 e0       	ldi	r22, 0x00	; 0
    1a76:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>

}
    1a7a:	2f 96       	adiw	r28, 0x0f	; 15
    1a7c:	0f b6       	in	r0, 0x3f	; 63
    1a7e:	f8 94       	cli
    1a80:	de bf       	out	0x3e, r29	; 62
    1a82:	0f be       	out	0x3f, r0	; 63
    1a84:	cd bf       	out	0x3d, r28	; 61
    1a86:	cf 91       	pop	r28
    1a88:	df 91       	pop	r29
    1a8a:	08 95       	ret

00001a8c <Lcd_vidInit>:

void Lcd_vidInit(void)
{
    1a8c:	df 93       	push	r29
    1a8e:	cf 93       	push	r28
    1a90:	cd b7       	in	r28, 0x3d	; 61
    1a92:	de b7       	in	r29, 0x3e	; 62
    1a94:	aa 97       	sbiw	r28, 0x2a	; 42
    1a96:	0f b6       	in	r0, 0x3f	; 63
    1a98:	f8 94       	cli
    1a9a:	de bf       	out	0x3e, r29	; 62
    1a9c:	0f be       	out	0x3f, r0	; 63
    1a9e:	cd bf       	out	0x3d, r28	; 61
	 Dio_vidSetPinDir(LCD_u8RS_PIN , DIO_u8OUTPUT);
    1aa0:	80 e0       	ldi	r24, 0x00	; 0
    1aa2:	61 e0       	ldi	r22, 0x01	; 1
    1aa4:	0e 94 9b 05 	call	0xb36	; 0xb36 <Dio_vidSetPinDir>
	 Dio_vidSetPinDir(LCD_u8RW_PIN , DIO_u8OUTPUT);
    1aa8:	81 e0       	ldi	r24, 0x01	; 1
    1aaa:	61 e0       	ldi	r22, 0x01	; 1
    1aac:	0e 94 9b 05 	call	0xb36	; 0xb36 <Dio_vidSetPinDir>
	 Dio_vidSetPinDir(LCD_u8EN_PIN , DIO_u8OUTPUT);
    1ab0:	82 e0       	ldi	r24, 0x02	; 2
    1ab2:	61 e0       	ldi	r22, 0x01	; 1
    1ab4:	0e 94 9b 05 	call	0xb36	; 0xb36 <Dio_vidSetPinDir>

	 Dio_vidSetPinDir(LCD_u8D0_PIN , DIO_u8OUTPUT);
    1ab8:	88 e1       	ldi	r24, 0x18	; 24
    1aba:	61 e0       	ldi	r22, 0x01	; 1
    1abc:	0e 94 9b 05 	call	0xb36	; 0xb36 <Dio_vidSetPinDir>
	 Dio_vidSetPinDir(LCD_u8D1_PIN , DIO_u8OUTPUT);
    1ac0:	89 e1       	ldi	r24, 0x19	; 25
    1ac2:	61 e0       	ldi	r22, 0x01	; 1
    1ac4:	0e 94 9b 05 	call	0xb36	; 0xb36 <Dio_vidSetPinDir>
	 Dio_vidSetPinDir(LCD_u8D2_PIN , DIO_u8OUTPUT);
    1ac8:	8a e1       	ldi	r24, 0x1A	; 26
    1aca:	61 e0       	ldi	r22, 0x01	; 1
    1acc:	0e 94 9b 05 	call	0xb36	; 0xb36 <Dio_vidSetPinDir>
	 Dio_vidSetPinDir(LCD_u8D3_PIN , DIO_u8OUTPUT);
    1ad0:	8b e1       	ldi	r24, 0x1B	; 27
    1ad2:	61 e0       	ldi	r22, 0x01	; 1
    1ad4:	0e 94 9b 05 	call	0xb36	; 0xb36 <Dio_vidSetPinDir>
	 Dio_vidSetPinDir(LCD_u8D4_PIN , DIO_u8OUTPUT);
    1ad8:	8c e1       	ldi	r24, 0x1C	; 28
    1ada:	61 e0       	ldi	r22, 0x01	; 1
    1adc:	0e 94 9b 05 	call	0xb36	; 0xb36 <Dio_vidSetPinDir>
	 Dio_vidSetPinDir(LCD_u8D5_PIN , DIO_u8OUTPUT);
    1ae0:	8d e1       	ldi	r24, 0x1D	; 29
    1ae2:	61 e0       	ldi	r22, 0x01	; 1
    1ae4:	0e 94 9b 05 	call	0xb36	; 0xb36 <Dio_vidSetPinDir>
	 Dio_vidSetPinDir(LCD_u8D6_PIN , DIO_u8OUTPUT);
    1ae8:	8e e1       	ldi	r24, 0x1E	; 30
    1aea:	61 e0       	ldi	r22, 0x01	; 1
    1aec:	0e 94 9b 05 	call	0xb36	; 0xb36 <Dio_vidSetPinDir>
	 Dio_vidSetPinDir(LCD_u8D7_PIN , DIO_u8OUTPUT);
    1af0:	8f e1       	ldi	r24, 0x1F	; 31
    1af2:	61 e0       	ldi	r22, 0x01	; 1
    1af4:	0e 94 9b 05 	call	0xb36	; 0xb36 <Dio_vidSetPinDir>

	Lcd_vidSendCommand(LCD_u8CMD_8_BIT_2x16_5x7); //LCD_8BIT_2x16_5x7
    1af8:	88 e3       	ldi	r24, 0x38	; 56
    1afa:	0e 94 67 0c 	call	0x18ce	; 0x18ce <Lcd_vidSendCommand>
    1afe:	80 e0       	ldi	r24, 0x00	; 0
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	a0 e0       	ldi	r26, 0x00	; 0
    1b04:	b0 e4       	ldi	r27, 0x40	; 64
    1b06:	8f a3       	std	Y+39, r24	; 0x27
    1b08:	98 a7       	std	Y+40, r25	; 0x28
    1b0a:	a9 a7       	std	Y+41, r26	; 0x29
    1b0c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b0e:	6f a1       	ldd	r22, Y+39	; 0x27
    1b10:	78 a5       	ldd	r23, Y+40	; 0x28
    1b12:	89 a5       	ldd	r24, Y+41	; 0x29
    1b14:	9a a5       	ldd	r25, Y+42	; 0x2a
    1b16:	20 e0       	ldi	r18, 0x00	; 0
    1b18:	30 e0       	ldi	r19, 0x00	; 0
    1b1a:	4a ef       	ldi	r20, 0xFA	; 250
    1b1c:	54 e4       	ldi	r21, 0x44	; 68
    1b1e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b22:	dc 01       	movw	r26, r24
    1b24:	cb 01       	movw	r24, r22
    1b26:	8b a3       	std	Y+35, r24	; 0x23
    1b28:	9c a3       	std	Y+36, r25	; 0x24
    1b2a:	ad a3       	std	Y+37, r26	; 0x25
    1b2c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1b2e:	6b a1       	ldd	r22, Y+35	; 0x23
    1b30:	7c a1       	ldd	r23, Y+36	; 0x24
    1b32:	8d a1       	ldd	r24, Y+37	; 0x25
    1b34:	9e a1       	ldd	r25, Y+38	; 0x26
    1b36:	20 e0       	ldi	r18, 0x00	; 0
    1b38:	30 e0       	ldi	r19, 0x00	; 0
    1b3a:	40 e8       	ldi	r20, 0x80	; 128
    1b3c:	5f e3       	ldi	r21, 0x3F	; 63
    1b3e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b42:	88 23       	and	r24, r24
    1b44:	2c f4       	brge	.+10     	; 0x1b50 <Lcd_vidInit+0xc4>
		__ticks = 1;
    1b46:	81 e0       	ldi	r24, 0x01	; 1
    1b48:	90 e0       	ldi	r25, 0x00	; 0
    1b4a:	9a a3       	std	Y+34, r25	; 0x22
    1b4c:	89 a3       	std	Y+33, r24	; 0x21
    1b4e:	3f c0       	rjmp	.+126    	; 0x1bce <Lcd_vidInit+0x142>
	else if (__tmp > 65535)
    1b50:	6b a1       	ldd	r22, Y+35	; 0x23
    1b52:	7c a1       	ldd	r23, Y+36	; 0x24
    1b54:	8d a1       	ldd	r24, Y+37	; 0x25
    1b56:	9e a1       	ldd	r25, Y+38	; 0x26
    1b58:	20 e0       	ldi	r18, 0x00	; 0
    1b5a:	3f ef       	ldi	r19, 0xFF	; 255
    1b5c:	4f e7       	ldi	r20, 0x7F	; 127
    1b5e:	57 e4       	ldi	r21, 0x47	; 71
    1b60:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b64:	18 16       	cp	r1, r24
    1b66:	4c f5       	brge	.+82     	; 0x1bba <Lcd_vidInit+0x12e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b68:	6f a1       	ldd	r22, Y+39	; 0x27
    1b6a:	78 a5       	ldd	r23, Y+40	; 0x28
    1b6c:	89 a5       	ldd	r24, Y+41	; 0x29
    1b6e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1b70:	20 e0       	ldi	r18, 0x00	; 0
    1b72:	30 e0       	ldi	r19, 0x00	; 0
    1b74:	40 e2       	ldi	r20, 0x20	; 32
    1b76:	51 e4       	ldi	r21, 0x41	; 65
    1b78:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b7c:	dc 01       	movw	r26, r24
    1b7e:	cb 01       	movw	r24, r22
    1b80:	bc 01       	movw	r22, r24
    1b82:	cd 01       	movw	r24, r26
    1b84:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b88:	dc 01       	movw	r26, r24
    1b8a:	cb 01       	movw	r24, r22
    1b8c:	9a a3       	std	Y+34, r25	; 0x22
    1b8e:	89 a3       	std	Y+33, r24	; 0x21
    1b90:	0f c0       	rjmp	.+30     	; 0x1bb0 <Lcd_vidInit+0x124>
    1b92:	88 ec       	ldi	r24, 0xC8	; 200
    1b94:	90 e0       	ldi	r25, 0x00	; 0
    1b96:	98 a3       	std	Y+32, r25	; 0x20
    1b98:	8f 8f       	std	Y+31, r24	; 0x1f
    1b9a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1b9c:	98 a1       	ldd	r25, Y+32	; 0x20
    1b9e:	01 97       	sbiw	r24, 0x01	; 1
    1ba0:	f1 f7       	brne	.-4      	; 0x1b9e <Lcd_vidInit+0x112>
    1ba2:	98 a3       	std	Y+32, r25	; 0x20
    1ba4:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ba6:	89 a1       	ldd	r24, Y+33	; 0x21
    1ba8:	9a a1       	ldd	r25, Y+34	; 0x22
    1baa:	01 97       	sbiw	r24, 0x01	; 1
    1bac:	9a a3       	std	Y+34, r25	; 0x22
    1bae:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bb0:	89 a1       	ldd	r24, Y+33	; 0x21
    1bb2:	9a a1       	ldd	r25, Y+34	; 0x22
    1bb4:	00 97       	sbiw	r24, 0x00	; 0
    1bb6:	69 f7       	brne	.-38     	; 0x1b92 <Lcd_vidInit+0x106>
    1bb8:	14 c0       	rjmp	.+40     	; 0x1be2 <Lcd_vidInit+0x156>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bba:	6b a1       	ldd	r22, Y+35	; 0x23
    1bbc:	7c a1       	ldd	r23, Y+36	; 0x24
    1bbe:	8d a1       	ldd	r24, Y+37	; 0x25
    1bc0:	9e a1       	ldd	r25, Y+38	; 0x26
    1bc2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1bc6:	dc 01       	movw	r26, r24
    1bc8:	cb 01       	movw	r24, r22
    1bca:	9a a3       	std	Y+34, r25	; 0x22
    1bcc:	89 a3       	std	Y+33, r24	; 0x21
    1bce:	89 a1       	ldd	r24, Y+33	; 0x21
    1bd0:	9a a1       	ldd	r25, Y+34	; 0x22
    1bd2:	9e 8f       	std	Y+30, r25	; 0x1e
    1bd4:	8d 8f       	std	Y+29, r24	; 0x1d
    1bd6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1bd8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1bda:	01 97       	sbiw	r24, 0x01	; 1
    1bdc:	f1 f7       	brne	.-4      	; 0x1bda <Lcd_vidInit+0x14e>
    1bde:	9e 8f       	std	Y+30, r25	; 0x1e
    1be0:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(2);
	Lcd_vidSendCommand(LCD_u8CMD_DISP_ON_CURS_OFF);
    1be2:	8c e0       	ldi	r24, 0x0C	; 12
    1be4:	0e 94 67 0c 	call	0x18ce	; 0x18ce <Lcd_vidSendCommand>
    1be8:	80 e0       	ldi	r24, 0x00	; 0
    1bea:	90 e0       	ldi	r25, 0x00	; 0
    1bec:	a0 e0       	ldi	r26, 0x00	; 0
    1bee:	b0 e4       	ldi	r27, 0x40	; 64
    1bf0:	89 8f       	std	Y+25, r24	; 0x19
    1bf2:	9a 8f       	std	Y+26, r25	; 0x1a
    1bf4:	ab 8f       	std	Y+27, r26	; 0x1b
    1bf6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bf8:	69 8d       	ldd	r22, Y+25	; 0x19
    1bfa:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1bfc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1bfe:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c00:	20 e0       	ldi	r18, 0x00	; 0
    1c02:	30 e0       	ldi	r19, 0x00	; 0
    1c04:	4a ef       	ldi	r20, 0xFA	; 250
    1c06:	54 e4       	ldi	r21, 0x44	; 68
    1c08:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c0c:	dc 01       	movw	r26, r24
    1c0e:	cb 01       	movw	r24, r22
    1c10:	8d 8b       	std	Y+21, r24	; 0x15
    1c12:	9e 8b       	std	Y+22, r25	; 0x16
    1c14:	af 8b       	std	Y+23, r26	; 0x17
    1c16:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1c18:	6d 89       	ldd	r22, Y+21	; 0x15
    1c1a:	7e 89       	ldd	r23, Y+22	; 0x16
    1c1c:	8f 89       	ldd	r24, Y+23	; 0x17
    1c1e:	98 8d       	ldd	r25, Y+24	; 0x18
    1c20:	20 e0       	ldi	r18, 0x00	; 0
    1c22:	30 e0       	ldi	r19, 0x00	; 0
    1c24:	40 e8       	ldi	r20, 0x80	; 128
    1c26:	5f e3       	ldi	r21, 0x3F	; 63
    1c28:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1c2c:	88 23       	and	r24, r24
    1c2e:	2c f4       	brge	.+10     	; 0x1c3a <Lcd_vidInit+0x1ae>
		__ticks = 1;
    1c30:	81 e0       	ldi	r24, 0x01	; 1
    1c32:	90 e0       	ldi	r25, 0x00	; 0
    1c34:	9c 8b       	std	Y+20, r25	; 0x14
    1c36:	8b 8b       	std	Y+19, r24	; 0x13
    1c38:	3f c0       	rjmp	.+126    	; 0x1cb8 <Lcd_vidInit+0x22c>
	else if (__tmp > 65535)
    1c3a:	6d 89       	ldd	r22, Y+21	; 0x15
    1c3c:	7e 89       	ldd	r23, Y+22	; 0x16
    1c3e:	8f 89       	ldd	r24, Y+23	; 0x17
    1c40:	98 8d       	ldd	r25, Y+24	; 0x18
    1c42:	20 e0       	ldi	r18, 0x00	; 0
    1c44:	3f ef       	ldi	r19, 0xFF	; 255
    1c46:	4f e7       	ldi	r20, 0x7F	; 127
    1c48:	57 e4       	ldi	r21, 0x47	; 71
    1c4a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c4e:	18 16       	cp	r1, r24
    1c50:	4c f5       	brge	.+82     	; 0x1ca4 <Lcd_vidInit+0x218>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c52:	69 8d       	ldd	r22, Y+25	; 0x19
    1c54:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c56:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c58:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c5a:	20 e0       	ldi	r18, 0x00	; 0
    1c5c:	30 e0       	ldi	r19, 0x00	; 0
    1c5e:	40 e2       	ldi	r20, 0x20	; 32
    1c60:	51 e4       	ldi	r21, 0x41	; 65
    1c62:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c66:	dc 01       	movw	r26, r24
    1c68:	cb 01       	movw	r24, r22
    1c6a:	bc 01       	movw	r22, r24
    1c6c:	cd 01       	movw	r24, r26
    1c6e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c72:	dc 01       	movw	r26, r24
    1c74:	cb 01       	movw	r24, r22
    1c76:	9c 8b       	std	Y+20, r25	; 0x14
    1c78:	8b 8b       	std	Y+19, r24	; 0x13
    1c7a:	0f c0       	rjmp	.+30     	; 0x1c9a <Lcd_vidInit+0x20e>
    1c7c:	88 ec       	ldi	r24, 0xC8	; 200
    1c7e:	90 e0       	ldi	r25, 0x00	; 0
    1c80:	9a 8b       	std	Y+18, r25	; 0x12
    1c82:	89 8b       	std	Y+17, r24	; 0x11
    1c84:	89 89       	ldd	r24, Y+17	; 0x11
    1c86:	9a 89       	ldd	r25, Y+18	; 0x12
    1c88:	01 97       	sbiw	r24, 0x01	; 1
    1c8a:	f1 f7       	brne	.-4      	; 0x1c88 <Lcd_vidInit+0x1fc>
    1c8c:	9a 8b       	std	Y+18, r25	; 0x12
    1c8e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c90:	8b 89       	ldd	r24, Y+19	; 0x13
    1c92:	9c 89       	ldd	r25, Y+20	; 0x14
    1c94:	01 97       	sbiw	r24, 0x01	; 1
    1c96:	9c 8b       	std	Y+20, r25	; 0x14
    1c98:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c9a:	8b 89       	ldd	r24, Y+19	; 0x13
    1c9c:	9c 89       	ldd	r25, Y+20	; 0x14
    1c9e:	00 97       	sbiw	r24, 0x00	; 0
    1ca0:	69 f7       	brne	.-38     	; 0x1c7c <Lcd_vidInit+0x1f0>
    1ca2:	14 c0       	rjmp	.+40     	; 0x1ccc <Lcd_vidInit+0x240>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ca4:	6d 89       	ldd	r22, Y+21	; 0x15
    1ca6:	7e 89       	ldd	r23, Y+22	; 0x16
    1ca8:	8f 89       	ldd	r24, Y+23	; 0x17
    1caa:	98 8d       	ldd	r25, Y+24	; 0x18
    1cac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cb0:	dc 01       	movw	r26, r24
    1cb2:	cb 01       	movw	r24, r22
    1cb4:	9c 8b       	std	Y+20, r25	; 0x14
    1cb6:	8b 8b       	std	Y+19, r24	; 0x13
    1cb8:	8b 89       	ldd	r24, Y+19	; 0x13
    1cba:	9c 89       	ldd	r25, Y+20	; 0x14
    1cbc:	98 8b       	std	Y+16, r25	; 0x10
    1cbe:	8f 87       	std	Y+15, r24	; 0x0f
    1cc0:	8f 85       	ldd	r24, Y+15	; 0x0f
    1cc2:	98 89       	ldd	r25, Y+16	; 0x10
    1cc4:	01 97       	sbiw	r24, 0x01	; 1
    1cc6:	f1 f7       	brne	.-4      	; 0x1cc4 <Lcd_vidInit+0x238>
    1cc8:	98 8b       	std	Y+16, r25	; 0x10
    1cca:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	Lcd_vidSendCommand(LCD_u8CMD_CLR_Display);
    1ccc:	81 e0       	ldi	r24, 0x01	; 1
    1cce:	0e 94 67 0c 	call	0x18ce	; 0x18ce <Lcd_vidSendCommand>
    1cd2:	80 e0       	ldi	r24, 0x00	; 0
    1cd4:	90 e0       	ldi	r25, 0x00	; 0
    1cd6:	a0 e0       	ldi	r26, 0x00	; 0
    1cd8:	b0 e4       	ldi	r27, 0x40	; 64
    1cda:	8b 87       	std	Y+11, r24	; 0x0b
    1cdc:	9c 87       	std	Y+12, r25	; 0x0c
    1cde:	ad 87       	std	Y+13, r26	; 0x0d
    1ce0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ce2:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ce4:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ce6:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ce8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1cea:	20 e0       	ldi	r18, 0x00	; 0
    1cec:	30 e0       	ldi	r19, 0x00	; 0
    1cee:	4a ef       	ldi	r20, 0xFA	; 250
    1cf0:	54 e4       	ldi	r21, 0x44	; 68
    1cf2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cf6:	dc 01       	movw	r26, r24
    1cf8:	cb 01       	movw	r24, r22
    1cfa:	8f 83       	std	Y+7, r24	; 0x07
    1cfc:	98 87       	std	Y+8, r25	; 0x08
    1cfe:	a9 87       	std	Y+9, r26	; 0x09
    1d00:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1d02:	6f 81       	ldd	r22, Y+7	; 0x07
    1d04:	78 85       	ldd	r23, Y+8	; 0x08
    1d06:	89 85       	ldd	r24, Y+9	; 0x09
    1d08:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d0a:	20 e0       	ldi	r18, 0x00	; 0
    1d0c:	30 e0       	ldi	r19, 0x00	; 0
    1d0e:	40 e8       	ldi	r20, 0x80	; 128
    1d10:	5f e3       	ldi	r21, 0x3F	; 63
    1d12:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d16:	88 23       	and	r24, r24
    1d18:	2c f4       	brge	.+10     	; 0x1d24 <Lcd_vidInit+0x298>
		__ticks = 1;
    1d1a:	81 e0       	ldi	r24, 0x01	; 1
    1d1c:	90 e0       	ldi	r25, 0x00	; 0
    1d1e:	9e 83       	std	Y+6, r25	; 0x06
    1d20:	8d 83       	std	Y+5, r24	; 0x05
    1d22:	3f c0       	rjmp	.+126    	; 0x1da2 <Lcd_vidInit+0x316>
	else if (__tmp > 65535)
    1d24:	6f 81       	ldd	r22, Y+7	; 0x07
    1d26:	78 85       	ldd	r23, Y+8	; 0x08
    1d28:	89 85       	ldd	r24, Y+9	; 0x09
    1d2a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d2c:	20 e0       	ldi	r18, 0x00	; 0
    1d2e:	3f ef       	ldi	r19, 0xFF	; 255
    1d30:	4f e7       	ldi	r20, 0x7F	; 127
    1d32:	57 e4       	ldi	r21, 0x47	; 71
    1d34:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d38:	18 16       	cp	r1, r24
    1d3a:	4c f5       	brge	.+82     	; 0x1d8e <Lcd_vidInit+0x302>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d3c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d3e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d40:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d42:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d44:	20 e0       	ldi	r18, 0x00	; 0
    1d46:	30 e0       	ldi	r19, 0x00	; 0
    1d48:	40 e2       	ldi	r20, 0x20	; 32
    1d4a:	51 e4       	ldi	r21, 0x41	; 65
    1d4c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d50:	dc 01       	movw	r26, r24
    1d52:	cb 01       	movw	r24, r22
    1d54:	bc 01       	movw	r22, r24
    1d56:	cd 01       	movw	r24, r26
    1d58:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d5c:	dc 01       	movw	r26, r24
    1d5e:	cb 01       	movw	r24, r22
    1d60:	9e 83       	std	Y+6, r25	; 0x06
    1d62:	8d 83       	std	Y+5, r24	; 0x05
    1d64:	0f c0       	rjmp	.+30     	; 0x1d84 <Lcd_vidInit+0x2f8>
    1d66:	88 ec       	ldi	r24, 0xC8	; 200
    1d68:	90 e0       	ldi	r25, 0x00	; 0
    1d6a:	9c 83       	std	Y+4, r25	; 0x04
    1d6c:	8b 83       	std	Y+3, r24	; 0x03
    1d6e:	8b 81       	ldd	r24, Y+3	; 0x03
    1d70:	9c 81       	ldd	r25, Y+4	; 0x04
    1d72:	01 97       	sbiw	r24, 0x01	; 1
    1d74:	f1 f7       	brne	.-4      	; 0x1d72 <Lcd_vidInit+0x2e6>
    1d76:	9c 83       	std	Y+4, r25	; 0x04
    1d78:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d7a:	8d 81       	ldd	r24, Y+5	; 0x05
    1d7c:	9e 81       	ldd	r25, Y+6	; 0x06
    1d7e:	01 97       	sbiw	r24, 0x01	; 1
    1d80:	9e 83       	std	Y+6, r25	; 0x06
    1d82:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d84:	8d 81       	ldd	r24, Y+5	; 0x05
    1d86:	9e 81       	ldd	r25, Y+6	; 0x06
    1d88:	00 97       	sbiw	r24, 0x00	; 0
    1d8a:	69 f7       	brne	.-38     	; 0x1d66 <Lcd_vidInit+0x2da>
    1d8c:	14 c0       	rjmp	.+40     	; 0x1db6 <Lcd_vidInit+0x32a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d8e:	6f 81       	ldd	r22, Y+7	; 0x07
    1d90:	78 85       	ldd	r23, Y+8	; 0x08
    1d92:	89 85       	ldd	r24, Y+9	; 0x09
    1d94:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d96:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d9a:	dc 01       	movw	r26, r24
    1d9c:	cb 01       	movw	r24, r22
    1d9e:	9e 83       	std	Y+6, r25	; 0x06
    1da0:	8d 83       	std	Y+5, r24	; 0x05
    1da2:	8d 81       	ldd	r24, Y+5	; 0x05
    1da4:	9e 81       	ldd	r25, Y+6	; 0x06
    1da6:	9a 83       	std	Y+2, r25	; 0x02
    1da8:	89 83       	std	Y+1, r24	; 0x01
    1daa:	89 81       	ldd	r24, Y+1	; 0x01
    1dac:	9a 81       	ldd	r25, Y+2	; 0x02
    1dae:	01 97       	sbiw	r24, 0x01	; 1
    1db0:	f1 f7       	brne	.-4      	; 0x1dae <Lcd_vidInit+0x322>
    1db2:	9a 83       	std	Y+2, r25	; 0x02
    1db4:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);

}
    1db6:	aa 96       	adiw	r28, 0x2a	; 42
    1db8:	0f b6       	in	r0, 0x3f	; 63
    1dba:	f8 94       	cli
    1dbc:	de bf       	out	0x3e, r29	; 62
    1dbe:	0f be       	out	0x3f, r0	; 63
    1dc0:	cd bf       	out	0x3d, r28	; 61
    1dc2:	cf 91       	pop	r28
    1dc4:	df 91       	pop	r29
    1dc6:	08 95       	ret

00001dc8 <Lcd_vidWriteChar>:

void Lcd_vidWriteChar(u8 Char)

{
    1dc8:	df 93       	push	r29
    1dca:	cf 93       	push	r28
    1dcc:	cd b7       	in	r28, 0x3d	; 61
    1dce:	de b7       	in	r29, 0x3e	; 62
    1dd0:	2f 97       	sbiw	r28, 0x0f	; 15
    1dd2:	0f b6       	in	r0, 0x3f	; 63
    1dd4:	f8 94       	cli
    1dd6:	de bf       	out	0x3e, r29	; 62
    1dd8:	0f be       	out	0x3f, r0	; 63
    1dda:	cd bf       	out	0x3d, r28	; 61
    1ddc:	8f 87       	std	Y+15, r24	; 0x0f
	Dio_vidSetPinVal(LCD_u8RS_PIN , DIO_u8HIGH);  //RS
    1dde:	80 e0       	ldi	r24, 0x00	; 0
    1de0:	61 e0       	ldi	r22, 0x01	; 1
    1de2:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8RW_PIN , DIO_u8LOW);  //RW
    1de6:	81 e0       	ldi	r24, 0x01	; 1
    1de8:	60 e0       	ldi	r22, 0x00	; 0
    1dea:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8EN_PIN , DIO_u8HIGH);  //EN
    1dee:	82 e0       	ldi	r24, 0x02	; 2
    1df0:	61 e0       	ldi	r22, 0x01	; 1
    1df2:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>

	Dio_vidSetPinVal(LCD_u8D0_PIN , GET_BIT(Char,0));
    1df6:	8f 85       	ldd	r24, Y+15	; 0x0f
    1df8:	98 2f       	mov	r25, r24
    1dfa:	91 70       	andi	r25, 0x01	; 1
    1dfc:	88 e1       	ldi	r24, 0x18	; 24
    1dfe:	69 2f       	mov	r22, r25
    1e00:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D1_PIN , GET_BIT(Char,1));
    1e04:	8f 85       	ldd	r24, Y+15	; 0x0f
    1e06:	86 95       	lsr	r24
    1e08:	98 2f       	mov	r25, r24
    1e0a:	91 70       	andi	r25, 0x01	; 1
    1e0c:	89 e1       	ldi	r24, 0x19	; 25
    1e0e:	69 2f       	mov	r22, r25
    1e10:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D2_PIN , GET_BIT(Char,2));
    1e14:	8f 85       	ldd	r24, Y+15	; 0x0f
    1e16:	86 95       	lsr	r24
    1e18:	86 95       	lsr	r24
    1e1a:	98 2f       	mov	r25, r24
    1e1c:	91 70       	andi	r25, 0x01	; 1
    1e1e:	8a e1       	ldi	r24, 0x1A	; 26
    1e20:	69 2f       	mov	r22, r25
    1e22:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D3_PIN , GET_BIT(Char,3));
    1e26:	8f 85       	ldd	r24, Y+15	; 0x0f
    1e28:	86 95       	lsr	r24
    1e2a:	86 95       	lsr	r24
    1e2c:	86 95       	lsr	r24
    1e2e:	98 2f       	mov	r25, r24
    1e30:	91 70       	andi	r25, 0x01	; 1
    1e32:	8b e1       	ldi	r24, 0x1B	; 27
    1e34:	69 2f       	mov	r22, r25
    1e36:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D4_PIN , GET_BIT(Char,4));
    1e3a:	8f 85       	ldd	r24, Y+15	; 0x0f
    1e3c:	82 95       	swap	r24
    1e3e:	8f 70       	andi	r24, 0x0F	; 15
    1e40:	98 2f       	mov	r25, r24
    1e42:	91 70       	andi	r25, 0x01	; 1
    1e44:	8c e1       	ldi	r24, 0x1C	; 28
    1e46:	69 2f       	mov	r22, r25
    1e48:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D5_PIN , GET_BIT(Char,5));
    1e4c:	8f 85       	ldd	r24, Y+15	; 0x0f
    1e4e:	82 95       	swap	r24
    1e50:	86 95       	lsr	r24
    1e52:	87 70       	andi	r24, 0x07	; 7
    1e54:	98 2f       	mov	r25, r24
    1e56:	91 70       	andi	r25, 0x01	; 1
    1e58:	8d e1       	ldi	r24, 0x1D	; 29
    1e5a:	69 2f       	mov	r22, r25
    1e5c:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D6_PIN , GET_BIT(Char,6));
    1e60:	8f 85       	ldd	r24, Y+15	; 0x0f
    1e62:	82 95       	swap	r24
    1e64:	86 95       	lsr	r24
    1e66:	86 95       	lsr	r24
    1e68:	83 70       	andi	r24, 0x03	; 3
    1e6a:	98 2f       	mov	r25, r24
    1e6c:	91 70       	andi	r25, 0x01	; 1
    1e6e:	8e e1       	ldi	r24, 0x1E	; 30
    1e70:	69 2f       	mov	r22, r25
    1e72:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D7_PIN , GET_BIT(Char,7));
    1e76:	8f 85       	ldd	r24, Y+15	; 0x0f
    1e78:	98 2f       	mov	r25, r24
    1e7a:	99 1f       	adc	r25, r25
    1e7c:	99 27       	eor	r25, r25
    1e7e:	99 1f       	adc	r25, r25
    1e80:	8f e1       	ldi	r24, 0x1F	; 31
    1e82:	69 2f       	mov	r22, r25
    1e84:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
    1e88:	80 e0       	ldi	r24, 0x00	; 0
    1e8a:	90 e0       	ldi	r25, 0x00	; 0
    1e8c:	a0 e0       	ldi	r26, 0x00	; 0
    1e8e:	b0 e4       	ldi	r27, 0x40	; 64
    1e90:	8b 87       	std	Y+11, r24	; 0x0b
    1e92:	9c 87       	std	Y+12, r25	; 0x0c
    1e94:	ad 87       	std	Y+13, r26	; 0x0d
    1e96:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e98:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e9a:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e9c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e9e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ea0:	20 e0       	ldi	r18, 0x00	; 0
    1ea2:	30 e0       	ldi	r19, 0x00	; 0
    1ea4:	4a ef       	ldi	r20, 0xFA	; 250
    1ea6:	54 e4       	ldi	r21, 0x44	; 68
    1ea8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1eac:	dc 01       	movw	r26, r24
    1eae:	cb 01       	movw	r24, r22
    1eb0:	8f 83       	std	Y+7, r24	; 0x07
    1eb2:	98 87       	std	Y+8, r25	; 0x08
    1eb4:	a9 87       	std	Y+9, r26	; 0x09
    1eb6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1eb8:	6f 81       	ldd	r22, Y+7	; 0x07
    1eba:	78 85       	ldd	r23, Y+8	; 0x08
    1ebc:	89 85       	ldd	r24, Y+9	; 0x09
    1ebe:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ec0:	20 e0       	ldi	r18, 0x00	; 0
    1ec2:	30 e0       	ldi	r19, 0x00	; 0
    1ec4:	40 e8       	ldi	r20, 0x80	; 128
    1ec6:	5f e3       	ldi	r21, 0x3F	; 63
    1ec8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ecc:	88 23       	and	r24, r24
    1ece:	2c f4       	brge	.+10     	; 0x1eda <Lcd_vidWriteChar+0x112>
		__ticks = 1;
    1ed0:	81 e0       	ldi	r24, 0x01	; 1
    1ed2:	90 e0       	ldi	r25, 0x00	; 0
    1ed4:	9e 83       	std	Y+6, r25	; 0x06
    1ed6:	8d 83       	std	Y+5, r24	; 0x05
    1ed8:	3f c0       	rjmp	.+126    	; 0x1f58 <Lcd_vidWriteChar+0x190>
	else if (__tmp > 65535)
    1eda:	6f 81       	ldd	r22, Y+7	; 0x07
    1edc:	78 85       	ldd	r23, Y+8	; 0x08
    1ede:	89 85       	ldd	r24, Y+9	; 0x09
    1ee0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ee2:	20 e0       	ldi	r18, 0x00	; 0
    1ee4:	3f ef       	ldi	r19, 0xFF	; 255
    1ee6:	4f e7       	ldi	r20, 0x7F	; 127
    1ee8:	57 e4       	ldi	r21, 0x47	; 71
    1eea:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1eee:	18 16       	cp	r1, r24
    1ef0:	4c f5       	brge	.+82     	; 0x1f44 <Lcd_vidWriteChar+0x17c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ef2:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ef4:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ef6:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ef8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1efa:	20 e0       	ldi	r18, 0x00	; 0
    1efc:	30 e0       	ldi	r19, 0x00	; 0
    1efe:	40 e2       	ldi	r20, 0x20	; 32
    1f00:	51 e4       	ldi	r21, 0x41	; 65
    1f02:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f06:	dc 01       	movw	r26, r24
    1f08:	cb 01       	movw	r24, r22
    1f0a:	bc 01       	movw	r22, r24
    1f0c:	cd 01       	movw	r24, r26
    1f0e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f12:	dc 01       	movw	r26, r24
    1f14:	cb 01       	movw	r24, r22
    1f16:	9e 83       	std	Y+6, r25	; 0x06
    1f18:	8d 83       	std	Y+5, r24	; 0x05
    1f1a:	0f c0       	rjmp	.+30     	; 0x1f3a <Lcd_vidWriteChar+0x172>
    1f1c:	88 ec       	ldi	r24, 0xC8	; 200
    1f1e:	90 e0       	ldi	r25, 0x00	; 0
    1f20:	9c 83       	std	Y+4, r25	; 0x04
    1f22:	8b 83       	std	Y+3, r24	; 0x03
    1f24:	8b 81       	ldd	r24, Y+3	; 0x03
    1f26:	9c 81       	ldd	r25, Y+4	; 0x04
    1f28:	01 97       	sbiw	r24, 0x01	; 1
    1f2a:	f1 f7       	brne	.-4      	; 0x1f28 <Lcd_vidWriteChar+0x160>
    1f2c:	9c 83       	std	Y+4, r25	; 0x04
    1f2e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f30:	8d 81       	ldd	r24, Y+5	; 0x05
    1f32:	9e 81       	ldd	r25, Y+6	; 0x06
    1f34:	01 97       	sbiw	r24, 0x01	; 1
    1f36:	9e 83       	std	Y+6, r25	; 0x06
    1f38:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f3a:	8d 81       	ldd	r24, Y+5	; 0x05
    1f3c:	9e 81       	ldd	r25, Y+6	; 0x06
    1f3e:	00 97       	sbiw	r24, 0x00	; 0
    1f40:	69 f7       	brne	.-38     	; 0x1f1c <Lcd_vidWriteChar+0x154>
    1f42:	14 c0       	rjmp	.+40     	; 0x1f6c <Lcd_vidWriteChar+0x1a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f44:	6f 81       	ldd	r22, Y+7	; 0x07
    1f46:	78 85       	ldd	r23, Y+8	; 0x08
    1f48:	89 85       	ldd	r24, Y+9	; 0x09
    1f4a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f4c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f50:	dc 01       	movw	r26, r24
    1f52:	cb 01       	movw	r24, r22
    1f54:	9e 83       	std	Y+6, r25	; 0x06
    1f56:	8d 83       	std	Y+5, r24	; 0x05
    1f58:	8d 81       	ldd	r24, Y+5	; 0x05
    1f5a:	9e 81       	ldd	r25, Y+6	; 0x06
    1f5c:	9a 83       	std	Y+2, r25	; 0x02
    1f5e:	89 83       	std	Y+1, r24	; 0x01
    1f60:	89 81       	ldd	r24, Y+1	; 0x01
    1f62:	9a 81       	ldd	r25, Y+2	; 0x02
    1f64:	01 97       	sbiw	r24, 0x01	; 1
    1f66:	f1 f7       	brne	.-4      	; 0x1f64 <Lcd_vidWriteChar+0x19c>
    1f68:	9a 83       	std	Y+2, r25	; 0x02
    1f6a:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(2);

	Dio_vidSetPinVal(LCD_u8EN_PIN , DIO_u8LOW);  //EN
    1f6c:	82 e0       	ldi	r24, 0x02	; 2
    1f6e:	60 e0       	ldi	r22, 0x00	; 0
    1f70:	0e 94 01 09 	call	0x1202	; 0x1202 <Dio_vidSetPinVal>
}
    1f74:	2f 96       	adiw	r28, 0x0f	; 15
    1f76:	0f b6       	in	r0, 0x3f	; 63
    1f78:	f8 94       	cli
    1f7a:	de bf       	out	0x3e, r29	; 62
    1f7c:	0f be       	out	0x3f, r0	; 63
    1f7e:	cd bf       	out	0x3d, r28	; 61
    1f80:	cf 91       	pop	r28
    1f82:	df 91       	pop	r29
    1f84:	08 95       	ret

00001f86 <Lcd_vidWriteStr>:

void Lcd_vidWriteStr(u8 *Str){
    1f86:	df 93       	push	r29
    1f88:	cf 93       	push	r28
    1f8a:	00 d0       	rcall	.+0      	; 0x1f8c <Lcd_vidWriteStr+0x6>
    1f8c:	0f 92       	push	r0
    1f8e:	cd b7       	in	r28, 0x3d	; 61
    1f90:	de b7       	in	r29, 0x3e	; 62
    1f92:	9b 83       	std	Y+3, r25	; 0x03
    1f94:	8a 83       	std	Y+2, r24	; 0x02
	u8 index = 0;
    1f96:	19 82       	std	Y+1, r1	; 0x01
    1f98:	0e c0       	rjmp	.+28     	; 0x1fb6 <Lcd_vidWriteStr+0x30>
	while(Str[index] != '\0')
	{
		Lcd_vidWriteChar(Str[index]);
    1f9a:	89 81       	ldd	r24, Y+1	; 0x01
    1f9c:	28 2f       	mov	r18, r24
    1f9e:	30 e0       	ldi	r19, 0x00	; 0
    1fa0:	8a 81       	ldd	r24, Y+2	; 0x02
    1fa2:	9b 81       	ldd	r25, Y+3	; 0x03
    1fa4:	fc 01       	movw	r30, r24
    1fa6:	e2 0f       	add	r30, r18
    1fa8:	f3 1f       	adc	r31, r19
    1faa:	80 81       	ld	r24, Z
    1fac:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <Lcd_vidWriteChar>
		index++;
    1fb0:	89 81       	ldd	r24, Y+1	; 0x01
    1fb2:	8f 5f       	subi	r24, 0xFF	; 255
    1fb4:	89 83       	std	Y+1, r24	; 0x01
	Dio_vidSetPinVal(LCD_u8EN_PIN , DIO_u8LOW);  //EN
}

void Lcd_vidWriteStr(u8 *Str){
	u8 index = 0;
	while(Str[index] != '\0')
    1fb6:	89 81       	ldd	r24, Y+1	; 0x01
    1fb8:	28 2f       	mov	r18, r24
    1fba:	30 e0       	ldi	r19, 0x00	; 0
    1fbc:	8a 81       	ldd	r24, Y+2	; 0x02
    1fbe:	9b 81       	ldd	r25, Y+3	; 0x03
    1fc0:	fc 01       	movw	r30, r24
    1fc2:	e2 0f       	add	r30, r18
    1fc4:	f3 1f       	adc	r31, r19
    1fc6:	80 81       	ld	r24, Z
    1fc8:	88 23       	and	r24, r24
    1fca:	39 f7       	brne	.-50     	; 0x1f9a <Lcd_vidWriteStr+0x14>
	{
		Lcd_vidWriteChar(Str[index]);
		index++;
	}
}
    1fcc:	0f 90       	pop	r0
    1fce:	0f 90       	pop	r0
    1fd0:	0f 90       	pop	r0
    1fd2:	cf 91       	pop	r28
    1fd4:	df 91       	pop	r29
    1fd6:	08 95       	ret

00001fd8 <main>:
#include <util/delay.h>
#include "Lcd_int.h"
#include "Dio_int.h"

int main(void)
{
    1fd8:	df 93       	push	r29
    1fda:	cf 93       	push	r28
    1fdc:	cd b7       	in	r28, 0x3d	; 61
    1fde:	de b7       	in	r29, 0x3e	; 62
    1fe0:	a7 97       	sbiw	r28, 0x27	; 39
    1fe2:	0f b6       	in	r0, 0x3f	; 63
    1fe4:	f8 94       	cli
    1fe6:	de bf       	out	0x3e, r29	; 62
    1fe8:	0f be       	out	0x3f, r0	; 63
    1fea:	cd bf       	out	0x3d, r28	; 61
	u8 arr[] = "heba";
    1fec:	ce 01       	movw	r24, r28
    1fee:	4e 96       	adiw	r24, 0x1e	; 30
    1ff0:	9c a3       	std	Y+36, r25	; 0x24
    1ff2:	8b a3       	std	Y+35, r24	; 0x23
    1ff4:	e0 e6       	ldi	r30, 0x60	; 96
    1ff6:	f0 e0       	ldi	r31, 0x00	; 0
    1ff8:	fe a3       	std	Y+38, r31	; 0x26
    1ffa:	ed a3       	std	Y+37, r30	; 0x25
    1ffc:	f5 e0       	ldi	r31, 0x05	; 5
    1ffe:	ff a3       	std	Y+39, r31	; 0x27
    2000:	ed a1       	ldd	r30, Y+37	; 0x25
    2002:	fe a1       	ldd	r31, Y+38	; 0x26
    2004:	00 80       	ld	r0, Z
    2006:	8d a1       	ldd	r24, Y+37	; 0x25
    2008:	9e a1       	ldd	r25, Y+38	; 0x26
    200a:	01 96       	adiw	r24, 0x01	; 1
    200c:	9e a3       	std	Y+38, r25	; 0x26
    200e:	8d a3       	std	Y+37, r24	; 0x25
    2010:	eb a1       	ldd	r30, Y+35	; 0x23
    2012:	fc a1       	ldd	r31, Y+36	; 0x24
    2014:	00 82       	st	Z, r0
    2016:	8b a1       	ldd	r24, Y+35	; 0x23
    2018:	9c a1       	ldd	r25, Y+36	; 0x24
    201a:	01 96       	adiw	r24, 0x01	; 1
    201c:	9c a3       	std	Y+36, r25	; 0x24
    201e:	8b a3       	std	Y+35, r24	; 0x23
    2020:	9f a1       	ldd	r25, Y+39	; 0x27
    2022:	91 50       	subi	r25, 0x01	; 1
    2024:	9f a3       	std	Y+39, r25	; 0x27
    2026:	ef a1       	ldd	r30, Y+39	; 0x27
    2028:	ee 23       	and	r30, r30
    202a:	51 f7       	brne	.-44     	; 0x2000 <main+0x28>
	u8 i =0;
    202c:	1d 8e       	std	Y+29, r1	; 0x1d
	Lcd_vidInit();
    202e:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <Lcd_vidInit>

	while(1)
	{
		Lcd_vidSendCommand(0x80+i);
    2032:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2034:	80 58       	subi	r24, 0x80	; 128
    2036:	0e 94 67 0c 	call	0x18ce	; 0x18ce <Lcd_vidSendCommand>
		Lcd_vidWriteStr(arr);
    203a:	ce 01       	movw	r24, r28
    203c:	4e 96       	adiw	r24, 0x1e	; 30
    203e:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <Lcd_vidWriteStr>
    2042:	80 e0       	ldi	r24, 0x00	; 0
    2044:	90 e0       	ldi	r25, 0x00	; 0
    2046:	a6 e9       	ldi	r26, 0x96	; 150
    2048:	b3 e4       	ldi	r27, 0x43	; 67
    204a:	89 8f       	std	Y+25, r24	; 0x19
    204c:	9a 8f       	std	Y+26, r25	; 0x1a
    204e:	ab 8f       	std	Y+27, r26	; 0x1b
    2050:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2052:	69 8d       	ldd	r22, Y+25	; 0x19
    2054:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2056:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2058:	9c 8d       	ldd	r25, Y+28	; 0x1c
    205a:	20 e0       	ldi	r18, 0x00	; 0
    205c:	30 e0       	ldi	r19, 0x00	; 0
    205e:	4a ef       	ldi	r20, 0xFA	; 250
    2060:	54 e4       	ldi	r21, 0x44	; 68
    2062:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2066:	dc 01       	movw	r26, r24
    2068:	cb 01       	movw	r24, r22
    206a:	8d 8b       	std	Y+21, r24	; 0x15
    206c:	9e 8b       	std	Y+22, r25	; 0x16
    206e:	af 8b       	std	Y+23, r26	; 0x17
    2070:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2072:	6d 89       	ldd	r22, Y+21	; 0x15
    2074:	7e 89       	ldd	r23, Y+22	; 0x16
    2076:	8f 89       	ldd	r24, Y+23	; 0x17
    2078:	98 8d       	ldd	r25, Y+24	; 0x18
    207a:	20 e0       	ldi	r18, 0x00	; 0
    207c:	30 e0       	ldi	r19, 0x00	; 0
    207e:	40 e8       	ldi	r20, 0x80	; 128
    2080:	5f e3       	ldi	r21, 0x3F	; 63
    2082:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2086:	88 23       	and	r24, r24
    2088:	2c f4       	brge	.+10     	; 0x2094 <main+0xbc>
		__ticks = 1;
    208a:	81 e0       	ldi	r24, 0x01	; 1
    208c:	90 e0       	ldi	r25, 0x00	; 0
    208e:	9c 8b       	std	Y+20, r25	; 0x14
    2090:	8b 8b       	std	Y+19, r24	; 0x13
    2092:	3f c0       	rjmp	.+126    	; 0x2112 <main+0x13a>
	else if (__tmp > 65535)
    2094:	6d 89       	ldd	r22, Y+21	; 0x15
    2096:	7e 89       	ldd	r23, Y+22	; 0x16
    2098:	8f 89       	ldd	r24, Y+23	; 0x17
    209a:	98 8d       	ldd	r25, Y+24	; 0x18
    209c:	20 e0       	ldi	r18, 0x00	; 0
    209e:	3f ef       	ldi	r19, 0xFF	; 255
    20a0:	4f e7       	ldi	r20, 0x7F	; 127
    20a2:	57 e4       	ldi	r21, 0x47	; 71
    20a4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    20a8:	18 16       	cp	r1, r24
    20aa:	4c f5       	brge	.+82     	; 0x20fe <main+0x126>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20ac:	69 8d       	ldd	r22, Y+25	; 0x19
    20ae:	7a 8d       	ldd	r23, Y+26	; 0x1a
    20b0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    20b2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    20b4:	20 e0       	ldi	r18, 0x00	; 0
    20b6:	30 e0       	ldi	r19, 0x00	; 0
    20b8:	40 e2       	ldi	r20, 0x20	; 32
    20ba:	51 e4       	ldi	r21, 0x41	; 65
    20bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20c0:	dc 01       	movw	r26, r24
    20c2:	cb 01       	movw	r24, r22
    20c4:	bc 01       	movw	r22, r24
    20c6:	cd 01       	movw	r24, r26
    20c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20cc:	dc 01       	movw	r26, r24
    20ce:	cb 01       	movw	r24, r22
    20d0:	9c 8b       	std	Y+20, r25	; 0x14
    20d2:	8b 8b       	std	Y+19, r24	; 0x13
    20d4:	0f c0       	rjmp	.+30     	; 0x20f4 <main+0x11c>
    20d6:	88 ec       	ldi	r24, 0xC8	; 200
    20d8:	90 e0       	ldi	r25, 0x00	; 0
    20da:	9a 8b       	std	Y+18, r25	; 0x12
    20dc:	89 8b       	std	Y+17, r24	; 0x11
    20de:	89 89       	ldd	r24, Y+17	; 0x11
    20e0:	9a 89       	ldd	r25, Y+18	; 0x12
    20e2:	01 97       	sbiw	r24, 0x01	; 1
    20e4:	f1 f7       	brne	.-4      	; 0x20e2 <main+0x10a>
    20e6:	9a 8b       	std	Y+18, r25	; 0x12
    20e8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20ea:	8b 89       	ldd	r24, Y+19	; 0x13
    20ec:	9c 89       	ldd	r25, Y+20	; 0x14
    20ee:	01 97       	sbiw	r24, 0x01	; 1
    20f0:	9c 8b       	std	Y+20, r25	; 0x14
    20f2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20f4:	8b 89       	ldd	r24, Y+19	; 0x13
    20f6:	9c 89       	ldd	r25, Y+20	; 0x14
    20f8:	00 97       	sbiw	r24, 0x00	; 0
    20fa:	69 f7       	brne	.-38     	; 0x20d6 <main+0xfe>
    20fc:	14 c0       	rjmp	.+40     	; 0x2126 <main+0x14e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20fe:	6d 89       	ldd	r22, Y+21	; 0x15
    2100:	7e 89       	ldd	r23, Y+22	; 0x16
    2102:	8f 89       	ldd	r24, Y+23	; 0x17
    2104:	98 8d       	ldd	r25, Y+24	; 0x18
    2106:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    210a:	dc 01       	movw	r26, r24
    210c:	cb 01       	movw	r24, r22
    210e:	9c 8b       	std	Y+20, r25	; 0x14
    2110:	8b 8b       	std	Y+19, r24	; 0x13
    2112:	8b 89       	ldd	r24, Y+19	; 0x13
    2114:	9c 89       	ldd	r25, Y+20	; 0x14
    2116:	98 8b       	std	Y+16, r25	; 0x10
    2118:	8f 87       	std	Y+15, r24	; 0x0f
    211a:	8f 85       	ldd	r24, Y+15	; 0x0f
    211c:	98 89       	ldd	r25, Y+16	; 0x10
    211e:	01 97       	sbiw	r24, 0x01	; 1
    2120:	f1 f7       	brne	.-4      	; 0x211e <main+0x146>
    2122:	98 8b       	std	Y+16, r25	; 0x10
    2124:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(300);
		Lcd_vidSendCommand(0x01);
    2126:	81 e0       	ldi	r24, 0x01	; 1
    2128:	0e 94 67 0c 	call	0x18ce	; 0x18ce <Lcd_vidSendCommand>
    212c:	80 e0       	ldi	r24, 0x00	; 0
    212e:	90 e0       	ldi	r25, 0x00	; 0
    2130:	a0 e0       	ldi	r26, 0x00	; 0
    2132:	b0 e4       	ldi	r27, 0x40	; 64
    2134:	8b 87       	std	Y+11, r24	; 0x0b
    2136:	9c 87       	std	Y+12, r25	; 0x0c
    2138:	ad 87       	std	Y+13, r26	; 0x0d
    213a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    213c:	6b 85       	ldd	r22, Y+11	; 0x0b
    213e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2140:	8d 85       	ldd	r24, Y+13	; 0x0d
    2142:	9e 85       	ldd	r25, Y+14	; 0x0e
    2144:	20 e0       	ldi	r18, 0x00	; 0
    2146:	30 e0       	ldi	r19, 0x00	; 0
    2148:	4a ef       	ldi	r20, 0xFA	; 250
    214a:	54 e4       	ldi	r21, 0x44	; 68
    214c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2150:	dc 01       	movw	r26, r24
    2152:	cb 01       	movw	r24, r22
    2154:	8f 83       	std	Y+7, r24	; 0x07
    2156:	98 87       	std	Y+8, r25	; 0x08
    2158:	a9 87       	std	Y+9, r26	; 0x09
    215a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    215c:	6f 81       	ldd	r22, Y+7	; 0x07
    215e:	78 85       	ldd	r23, Y+8	; 0x08
    2160:	89 85       	ldd	r24, Y+9	; 0x09
    2162:	9a 85       	ldd	r25, Y+10	; 0x0a
    2164:	20 e0       	ldi	r18, 0x00	; 0
    2166:	30 e0       	ldi	r19, 0x00	; 0
    2168:	40 e8       	ldi	r20, 0x80	; 128
    216a:	5f e3       	ldi	r21, 0x3F	; 63
    216c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2170:	88 23       	and	r24, r24
    2172:	2c f4       	brge	.+10     	; 0x217e <main+0x1a6>
		__ticks = 1;
    2174:	81 e0       	ldi	r24, 0x01	; 1
    2176:	90 e0       	ldi	r25, 0x00	; 0
    2178:	9e 83       	std	Y+6, r25	; 0x06
    217a:	8d 83       	std	Y+5, r24	; 0x05
    217c:	3f c0       	rjmp	.+126    	; 0x21fc <main+0x224>
	else if (__tmp > 65535)
    217e:	6f 81       	ldd	r22, Y+7	; 0x07
    2180:	78 85       	ldd	r23, Y+8	; 0x08
    2182:	89 85       	ldd	r24, Y+9	; 0x09
    2184:	9a 85       	ldd	r25, Y+10	; 0x0a
    2186:	20 e0       	ldi	r18, 0x00	; 0
    2188:	3f ef       	ldi	r19, 0xFF	; 255
    218a:	4f e7       	ldi	r20, 0x7F	; 127
    218c:	57 e4       	ldi	r21, 0x47	; 71
    218e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2192:	18 16       	cp	r1, r24
    2194:	4c f5       	brge	.+82     	; 0x21e8 <main+0x210>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2196:	6b 85       	ldd	r22, Y+11	; 0x0b
    2198:	7c 85       	ldd	r23, Y+12	; 0x0c
    219a:	8d 85       	ldd	r24, Y+13	; 0x0d
    219c:	9e 85       	ldd	r25, Y+14	; 0x0e
    219e:	20 e0       	ldi	r18, 0x00	; 0
    21a0:	30 e0       	ldi	r19, 0x00	; 0
    21a2:	40 e2       	ldi	r20, 0x20	; 32
    21a4:	51 e4       	ldi	r21, 0x41	; 65
    21a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21aa:	dc 01       	movw	r26, r24
    21ac:	cb 01       	movw	r24, r22
    21ae:	bc 01       	movw	r22, r24
    21b0:	cd 01       	movw	r24, r26
    21b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21b6:	dc 01       	movw	r26, r24
    21b8:	cb 01       	movw	r24, r22
    21ba:	9e 83       	std	Y+6, r25	; 0x06
    21bc:	8d 83       	std	Y+5, r24	; 0x05
    21be:	0f c0       	rjmp	.+30     	; 0x21de <main+0x206>
    21c0:	88 ec       	ldi	r24, 0xC8	; 200
    21c2:	90 e0       	ldi	r25, 0x00	; 0
    21c4:	9c 83       	std	Y+4, r25	; 0x04
    21c6:	8b 83       	std	Y+3, r24	; 0x03
    21c8:	8b 81       	ldd	r24, Y+3	; 0x03
    21ca:	9c 81       	ldd	r25, Y+4	; 0x04
    21cc:	01 97       	sbiw	r24, 0x01	; 1
    21ce:	f1 f7       	brne	.-4      	; 0x21cc <main+0x1f4>
    21d0:	9c 83       	std	Y+4, r25	; 0x04
    21d2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21d4:	8d 81       	ldd	r24, Y+5	; 0x05
    21d6:	9e 81       	ldd	r25, Y+6	; 0x06
    21d8:	01 97       	sbiw	r24, 0x01	; 1
    21da:	9e 83       	std	Y+6, r25	; 0x06
    21dc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21de:	8d 81       	ldd	r24, Y+5	; 0x05
    21e0:	9e 81       	ldd	r25, Y+6	; 0x06
    21e2:	00 97       	sbiw	r24, 0x00	; 0
    21e4:	69 f7       	brne	.-38     	; 0x21c0 <main+0x1e8>
    21e6:	14 c0       	rjmp	.+40     	; 0x2210 <main+0x238>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21e8:	6f 81       	ldd	r22, Y+7	; 0x07
    21ea:	78 85       	ldd	r23, Y+8	; 0x08
    21ec:	89 85       	ldd	r24, Y+9	; 0x09
    21ee:	9a 85       	ldd	r25, Y+10	; 0x0a
    21f0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21f4:	dc 01       	movw	r26, r24
    21f6:	cb 01       	movw	r24, r22
    21f8:	9e 83       	std	Y+6, r25	; 0x06
    21fa:	8d 83       	std	Y+5, r24	; 0x05
    21fc:	8d 81       	ldd	r24, Y+5	; 0x05
    21fe:	9e 81       	ldd	r25, Y+6	; 0x06
    2200:	9a 83       	std	Y+2, r25	; 0x02
    2202:	89 83       	std	Y+1, r24	; 0x01
    2204:	89 81       	ldd	r24, Y+1	; 0x01
    2206:	9a 81       	ldd	r25, Y+2	; 0x02
    2208:	01 97       	sbiw	r24, 0x01	; 1
    220a:	f1 f7       	brne	.-4      	; 0x2208 <main+0x230>
    220c:	9a 83       	std	Y+2, r25	; 0x02
    220e:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(2);
		i++;
    2210:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2212:	8f 5f       	subi	r24, 0xFF	; 255
    2214:	8d 8f       	std	Y+29, r24	; 0x1d
		if(i==13)
    2216:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2218:	8d 30       	cpi	r24, 0x0D	; 13
    221a:	39 f4       	brne	.+14     	; 0x222a <main+0x252>
		{
			Lcd_vidSendCommand(0x80);
    221c:	80 e8       	ldi	r24, 0x80	; 128
    221e:	0e 94 67 0c 	call	0x18ce	; 0x18ce <Lcd_vidSendCommand>
			Lcd_vidWriteChar('a');
    2222:	81 e6       	ldi	r24, 0x61	; 97
    2224:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <Lcd_vidWriteChar>
    2228:	04 cf       	rjmp	.-504    	; 0x2032 <main+0x5a>
		}
		else if(i==14)
    222a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    222c:	8e 30       	cpi	r24, 0x0E	; 14
    222e:	51 f4       	brne	.+20     	; 0x2244 <main+0x26c>
		{
			Lcd_vidSendCommand(0x80);
    2230:	80 e8       	ldi	r24, 0x80	; 128
    2232:	0e 94 67 0c 	call	0x18ce	; 0x18ce <Lcd_vidSendCommand>
			Lcd_vidWriteChar('b');
    2236:	82 e6       	ldi	r24, 0x62	; 98
    2238:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <Lcd_vidWriteChar>
			Lcd_vidWriteChar('a');
    223c:	81 e6       	ldi	r24, 0x61	; 97
    223e:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <Lcd_vidWriteChar>
    2242:	f7 ce       	rjmp	.-530    	; 0x2032 <main+0x5a>
		}
		else if(i==15)
    2244:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2246:	8f 30       	cpi	r24, 0x0F	; 15
    2248:	69 f4       	brne	.+26     	; 0x2264 <main+0x28c>
		{
			Lcd_vidSendCommand(0x80);
    224a:	80 e8       	ldi	r24, 0x80	; 128
    224c:	0e 94 67 0c 	call	0x18ce	; 0x18ce <Lcd_vidSendCommand>
			Lcd_vidWriteChar('e');
    2250:	85 e6       	ldi	r24, 0x65	; 101
    2252:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <Lcd_vidWriteChar>
			Lcd_vidWriteChar('b');
    2256:	82 e6       	ldi	r24, 0x62	; 98
    2258:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <Lcd_vidWriteChar>
			Lcd_vidWriteChar('a');
    225c:	81 e6       	ldi	r24, 0x61	; 97
    225e:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <Lcd_vidWriteChar>
    2262:	e7 ce       	rjmp	.-562    	; 0x2032 <main+0x5a>
		}
		else if(i==16)
    2264:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2266:	80 31       	cpi	r24, 0x10	; 16
    2268:	09 f0       	breq	.+2      	; 0x226c <main+0x294>
    226a:	e3 ce       	rjmp	.-570    	; 0x2032 <main+0x5a>
		{
			i=0;
    226c:	1d 8e       	std	Y+29, r1	; 0x1d
    226e:	e1 ce       	rjmp	.-574    	; 0x2032 <main+0x5a>

00002270 <__prologue_saves__>:
    2270:	2f 92       	push	r2
    2272:	3f 92       	push	r3
    2274:	4f 92       	push	r4
    2276:	5f 92       	push	r5
    2278:	6f 92       	push	r6
    227a:	7f 92       	push	r7
    227c:	8f 92       	push	r8
    227e:	9f 92       	push	r9
    2280:	af 92       	push	r10
    2282:	bf 92       	push	r11
    2284:	cf 92       	push	r12
    2286:	df 92       	push	r13
    2288:	ef 92       	push	r14
    228a:	ff 92       	push	r15
    228c:	0f 93       	push	r16
    228e:	1f 93       	push	r17
    2290:	cf 93       	push	r28
    2292:	df 93       	push	r29
    2294:	cd b7       	in	r28, 0x3d	; 61
    2296:	de b7       	in	r29, 0x3e	; 62
    2298:	ca 1b       	sub	r28, r26
    229a:	db 0b       	sbc	r29, r27
    229c:	0f b6       	in	r0, 0x3f	; 63
    229e:	f8 94       	cli
    22a0:	de bf       	out	0x3e, r29	; 62
    22a2:	0f be       	out	0x3f, r0	; 63
    22a4:	cd bf       	out	0x3d, r28	; 61
    22a6:	09 94       	ijmp

000022a8 <__epilogue_restores__>:
    22a8:	2a 88       	ldd	r2, Y+18	; 0x12
    22aa:	39 88       	ldd	r3, Y+17	; 0x11
    22ac:	48 88       	ldd	r4, Y+16	; 0x10
    22ae:	5f 84       	ldd	r5, Y+15	; 0x0f
    22b0:	6e 84       	ldd	r6, Y+14	; 0x0e
    22b2:	7d 84       	ldd	r7, Y+13	; 0x0d
    22b4:	8c 84       	ldd	r8, Y+12	; 0x0c
    22b6:	9b 84       	ldd	r9, Y+11	; 0x0b
    22b8:	aa 84       	ldd	r10, Y+10	; 0x0a
    22ba:	b9 84       	ldd	r11, Y+9	; 0x09
    22bc:	c8 84       	ldd	r12, Y+8	; 0x08
    22be:	df 80       	ldd	r13, Y+7	; 0x07
    22c0:	ee 80       	ldd	r14, Y+6	; 0x06
    22c2:	fd 80       	ldd	r15, Y+5	; 0x05
    22c4:	0c 81       	ldd	r16, Y+4	; 0x04
    22c6:	1b 81       	ldd	r17, Y+3	; 0x03
    22c8:	aa 81       	ldd	r26, Y+2	; 0x02
    22ca:	b9 81       	ldd	r27, Y+1	; 0x01
    22cc:	ce 0f       	add	r28, r30
    22ce:	d1 1d       	adc	r29, r1
    22d0:	0f b6       	in	r0, 0x3f	; 63
    22d2:	f8 94       	cli
    22d4:	de bf       	out	0x3e, r29	; 62
    22d6:	0f be       	out	0x3f, r0	; 63
    22d8:	cd bf       	out	0x3d, r28	; 61
    22da:	ed 01       	movw	r28, r26
    22dc:	08 95       	ret

000022de <_exit>:
    22de:	f8 94       	cli

000022e0 <__stop_program>:
    22e0:	ff cf       	rjmp	.-2      	; 0x22e0 <__stop_program>
